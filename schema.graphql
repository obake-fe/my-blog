# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
}

"Add date formatting options."
directive @dateformat(difference: String, formatString: String, fromNow: Boolean, locale: String) on FIELD_DEFINITION

"Link to node by foreign-key relation."
directive @link(by: String! = "id", from: String, on: String) on FIELD_DEFINITION

"Link to File node by relative path."
directive @fileByRelativePath(from: String) on FIELD_DEFINITION

"Proxy resolver from another field."
directive @proxy(from: String!, fromNode: Boolean! = false) on FIELD_DEFINITION

"Infer field types from field values."
directive @infer on OBJECT

"Do not infer field types from field values."
directive @dontInfer on OBJECT

"Define the mime-types handled by this type."
directive @mimeTypes(
    "The mime-types handled by this type."
    types: [String!]! = []
) on OBJECT

"Define parent-child relations between types. This is used to add `child*` and `children*` convenience fields like `childImageSharp`."
directive @childOf(
    "A list of mime-types this type is a child of. Usually these are the mime-types handled by a transformer plugin."
    mimeTypes: [String!]! = [],
    "A list of types this type is a child of. Usually these are the types handled by a transformer plugin."
    types: [String!]! = ["File", "contentfulBlogPostContentsTextNode"]
) on OBJECT

"""

DEPRECATED: Use interface inheritance instead, i.e. "interface Foo implements Node".

Adds root query fields for an interface. All implementing types must also implement the Node interface.
"""
directive @nodeInterface on INTERFACE

interface ContentfulEntry {
    children: [Node!]!
    contentful_id: String!
    id: ID!
    internal: Internal!
    node_locale: String!
    parent: Node
}

interface ContentfulReference {
    contentful_id: String!
    id: ID!
}

"Node Interface"
interface Node {
    children: [Node!]!
    id: ID!
    internal: Internal!
    parent: Node
}

"Remote Interface"
interface RemoteFile {
    filename: String!
    filesize: Int
    "Data used in the <GatsbyImage /> component. See https://gatsby.dev/img for more info."
    gatsbyImage(
        """

        If set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.
        If neither width or height is provided, height will be set based on the intrinsic width of the source image.
        """
        aspectRatio: Float,
        "Background color applied to the wrapper, or when \"letterboxing\" an image to another aspect ratio."
        backgroundColor: String,
        """

        Specifies the image widths to generate. You should rarely need to change this. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,
        based on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].
        It will never generate any images larger than the source.
        """
        breakpoints: [Int] = [750, 1080, 1366, 1920],
        cropFocus: [RemoteFileCropFocus],
        fit: RemoteFileFit = COVER,
        """

        The image formats to generate. Valid values are AUTO (meaning the same format as the source image), JPG, PNG, WEBP and AVIF.
        The default value is [AUTO, WEBP, AVIF], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
        not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
        both PNG and JPG is not supported and will be ignored.
        """
        formats: [RemoteFileFormat!] = [AUTO, WEBP, AVIF],
        """

        If set, the height of the generated image. If omitted, it is calculated from the supplied width, matching the aspect ratio of the source image.
        """
        height: Int,
        """

        The layout for the image.
        FIXED: A static image sized, that does not resize according to the screen width
        FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if it isn't going to be the full width of the screen.
        CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
        """
        layout: RemoteFileLayout = CONSTRAINED,
        """

        A list of image pixel densities to generate for FIXED and CONSTRAINED images. You should rarely need to change this. It will never generate images larger than the source, and will always include a 1x image.
        Default is [ 1, 2 ] for fixed images, meaning 1x, 2x, and [0.25, 0.5, 1, 2] for fluid. In this case, an image with a fluid layout and width = 400 would generate images at 100, 200, 400 and 800px wide.
        """
        outputPixelDensities: [Float] = [0.25, 0.5, 1.0, 2.0],
        """

        Format of generated placeholder image, displayed while the main image loads.
        BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
        DOMINANT_COLOR: a solid color, calculated from the dominant color of the image.
        TRACED_SVG: a low-resolution traced SVG of the image.
        NONE: no placeholder. Set the argument "backgroundColor" to use a fixed background color.
        """
        placeholder: RemoteFilePlaceholder = DOMINANT_COLOR,
        quality: Int = 75,
        """

        The "sizes" property, passed to the img tag. This describes the display size of the image.
        This does not affect the generated images, but is used by the browser to decide which images to download. You can leave this blank for fixed images, or if the responsive image
        container will be the full width of the screen. In these cases we will generate an appropriate value.
        """
        sizes: String,
        """

        The display width of the generated image for layout = FIXED, and the display width of the largest image for layout = CONSTRAINED.
        The actual largest image resolution will be this value multiplied by the largest value in outputPixelDensities
        Ignored if layout = FLUID.
        """
        width: Int
    ): JSON
    height: Int
    id: ID!
    mimeType: String!
    publicUrl: String!
    resize(
        aspectRatio: Float,
        cropFocus: [RemoteFileCropFocus],
        fit: RemoteFileFit = COVER,
        """

        The image formats to generate. Valid values are AUTO (meaning the same format as the source image), JPG, PNG, WEBP and AVIF.
        The default value is [AUTO, WEBP, AVIF], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
        not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
        both PNG and JPG is not supported and will be ignored.
        """
        format: RemoteFileFormat = AUTO,
        height: Int,
        quality: Int = 75,
        width: Int
    ): RemoteFileResize
    width: Int
}

type ContentfulAsset implements ContentfulReference & Node & RemoteFile {
    children: [Node!]!
    contentful_id: String!
    filename: String!
    filesize: Int
    "Data used in the <GatsbyImage /> component. See https://gatsby.dev/img for more info."
    gatsbyImage(
        """

        If set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.
        If neither width or height is provided, height will be set based on the intrinsic width of the source image.
        """
        aspectRatio: Float,
        "Background color applied to the wrapper, or when \"letterboxing\" an image to another aspect ratio."
        backgroundColor: String,
        """

        Specifies the image widths to generate. You should rarely need to change this. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,
        based on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].
        It will never generate any images larger than the source.
        """
        breakpoints: [Int] = [750, 1080, 1366, 1920],
        cropFocus: [RemoteFileCropFocus],
        fit: RemoteFileFit = COVER,
        """

        The image formats to generate. Valid values are AUTO (meaning the same format as the source image), JPG, PNG, WEBP and AVIF.
        The default value is [AUTO, WEBP, AVIF], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
        not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
        both PNG and JPG is not supported and will be ignored.
        """
        formats: [RemoteFileFormat!] = [AUTO, WEBP, AVIF],
        """

        If set, the height of the generated image. If omitted, it is calculated from the supplied width, matching the aspect ratio of the source image.
        """
        height: Int,
        """

        The layout for the image.
        FIXED: A static image sized, that does not resize according to the screen width
        FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if it isn't going to be the full width of the screen.
        CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
        """
        layout: RemoteFileLayout = CONSTRAINED,
        """

        A list of image pixel densities to generate for FIXED and CONSTRAINED images. You should rarely need to change this. It will never generate images larger than the source, and will always include a 1x image.
        Default is [ 1, 2 ] for fixed images, meaning 1x, 2x, and [0.25, 0.5, 1, 2] for fluid. In this case, an image with a fluid layout and width = 400 would generate images at 100, 200, 400 and 800px wide.
        """
        outputPixelDensities: [Float] = [0.25, 0.5, 1.0, 2.0],
        """

        Format of generated placeholder image, displayed while the main image loads.
        BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
        DOMINANT_COLOR: a solid color, calculated from the dominant color of the image.
        TRACED_SVG: a low-resolution traced SVG of the image.
        NONE: no placeholder. Set the argument "backgroundColor" to use a fixed background color.
        """
        placeholder: RemoteFilePlaceholder = DOMINANT_COLOR,
        quality: Int = 75,
        """

        The "sizes" property, passed to the img tag. This describes the display size of the image.
        This does not affect the generated images, but is used by the browser to decide which images to download. You can leave this blank for fixed images, or if the responsive image
        container will be the full width of the screen. In these cases we will generate an appropriate value.
        """
        sizes: String,
        """

        The display width of the generated image for layout = FIXED, and the display width of the largest image for layout = CONSTRAINED.
        The actual largest image resolution will be this value multiplied by the largest value in outputPixelDensities
        Ignored if layout = FLUID.
        """
        width: Int
    ): JSON
    gatsbyImageData(
        """

        If set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.
        If neither width or height is provided, height will be set based on the intrinsic width of the source image.
        """
        aspectRatio: Float,
        "Background color applied to the wrapper, or when \"letterboxing\" an image to another aspect ratio."
        backgroundColor: String,
        """

        Specifies the image widths to generate. You should rarely need to change this. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,
        based on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].
        It will never generate any images larger than the source.
        """
        breakpoints: [Int],
        """

        Desired corner radius in pixels. Results in an image with rounded corners.
        Pass `-1` for a full circle/ellipse.
        """
        cornerRadius: Int = 0,
        cropFocus: ContentfulImageCropFocus,
        """

        The image formats to generate. Valid values are AUTO (meaning the same format as the source image), JPG, PNG, WEBP and AVIF.
        The default value is [AUTO, WEBP], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
        not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
        both PNG and JPG is not supported and will be ignored.
        """
        formats: [GatsbyImageFormat] = [NO_CHANGE, WEBP],
        "If set, the height of the generated image. If omitted, it is calculated from the supplied width, matching the aspect ratio of the source image."
        height: Int,
        jpegProgressive: Boolean = true,
        """

        The layout for the image.
        FIXED: A static image sized, that does not resize according to the screen width
        FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if it isn't going to be the full width of the screen.
        CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
        """
        layout: GatsbyImageLayout,
        """

        A list of image pixel densities to generate for FIXED and CONSTRAINED images. You should rarely need to change this. It will never generate images larger than the source, and will always include a 1x image.
        Default is [ 1, 2 ] for fixed images, meaning 1x, 2x, 3x, and [0.25, 0.5, 1, 2] for fluid. In this case, an image with a fluid layout and width = 400 would generate images at 100, 200, 400 and 800px wide.
        """
        outputPixelDensities: [Float],
        """

        Format of generated placeholder image, displayed while the main image loads.
        BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
        DOMINANT_COLOR: a solid color, calculated from the dominant color of the image.
        TRACED_SVG: a low-resolution traced SVG of the image.
        NONE: no placeholder. Set the argument "backgroundColor" to use a fixed background color.
        """
        placeholder: GatsbyImagePlaceholder,
        quality: Int,
        resizingBehavior: ImageResizingBehavior,
        """

        The "sizes" property, passed to the img tag. This describes the display size of the image.
        This does not affect the generated images, but is used by the browser to decide which images to download. You can leave this blank for fixed images, or if the responsive image
        container will be the full width of the screen. In these cases we will generate an appropriate value.
        """
        sizes: String,
        """

        The display width of the generated image for layout = FIXED, and the display width of the largest image for layout = CONSTRAINED.
        The actual largest image resolution will be this value multiplied by the largest value in outputPixelDensities
        Ignored if layout = FLUID.
        """
        width: Int
    ): JSON
    height: Int
    id: ID!
    internal: Internal!
    mimeType: String!
    parent: Node
    publicUrl: String!
    resize(
        aspectRatio: Float,
        cropFocus: [RemoteFileCropFocus],
        fit: RemoteFileFit = COVER,
        """

        The image formats to generate. Valid values are AUTO (meaning the same format as the source image), JPG, PNG, WEBP and AVIF.
        The default value is [AUTO, WEBP, AVIF], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
        not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
        both PNG and JPG is not supported and will be ignored.
        """
        format: RemoteFileFormat = AUTO,
        height: Int,
        quality: Int = 75,
        width: Int
    ): RemoteFileResize
    width: Int
}

type ContentfulAssetConnection {
    distinct(field: ContentfulAssetFieldsEnum!): [String!]!
    edges: [ContentfulAssetEdge!]!
    group(field: ContentfulAssetFieldsEnum!, limit: Int, skip: Int): [ContentfulAssetGroupConnection!]!
    max(field: ContentfulAssetFieldsEnum!): Float
    min(field: ContentfulAssetFieldsEnum!): Float
    nodes: [ContentfulAsset!]!
    pageInfo: PageInfo!
    sum(field: ContentfulAssetFieldsEnum!): Float
    totalCount: Int!
}

type ContentfulAssetEdge {
    next: ContentfulAsset
    node: ContentfulAsset!
    previous: ContentfulAsset
}

type ContentfulAssetGroupConnection {
    distinct(field: ContentfulAssetFieldsEnum!): [String!]!
    edges: [ContentfulAssetEdge!]!
    field: String!
    fieldValue: String
    group(field: ContentfulAssetFieldsEnum!, limit: Int, skip: Int): [ContentfulAssetGroupConnection!]!
    max(field: ContentfulAssetFieldsEnum!): Float
    min(field: ContentfulAssetFieldsEnum!): Float
    nodes: [ContentfulAsset!]!
    pageInfo: PageInfo!
    sum(field: ContentfulAssetFieldsEnum!): Float
    totalCount: Int!
}

type ContentfulBlogPost implements ContentfulEntry & ContentfulReference & Node {
    "Returns the first child node of type contentfulBlogPostContentsTextNode or null if there are no children of given type on this node"
    childContentfulBlogPostContentsTextNode: contentfulBlogPostContentsTextNode
    children: [Node!]!
    "Returns all children nodes filtered by type contentfulBlogPostContentsTextNode"
    childrenContentfulBlogPostContentsTextNode: [contentfulBlogPostContentsTextNode]
    contentful_id: String!
    contents: contentfulBlogPostContentsTextNode
    createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    id: ID!
    internal: Internal!
    node_locale: String!
    parent: Node
    publishDate(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    slug: String
    spaceId: String
    sys: ContentfulBlogPostSys
    tags: [ContentfulTags]
    title: String
    updatedAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
}

type ContentfulBlogPostConnection {
    distinct(field: ContentfulBlogPostFieldsEnum!): [String!]!
    edges: [ContentfulBlogPostEdge!]!
    group(field: ContentfulBlogPostFieldsEnum!, limit: Int, skip: Int): [ContentfulBlogPostGroupConnection!]!
    max(field: ContentfulBlogPostFieldsEnum!): Float
    min(field: ContentfulBlogPostFieldsEnum!): Float
    nodes: [ContentfulBlogPost!]!
    pageInfo: PageInfo!
    sum(field: ContentfulBlogPostFieldsEnum!): Float
    totalCount: Int!
}

type ContentfulBlogPostEdge {
    next: ContentfulBlogPost
    node: ContentfulBlogPost!
    previous: ContentfulBlogPost
}

type ContentfulBlogPostGroupConnection {
    distinct(field: ContentfulBlogPostFieldsEnum!): [String!]!
    edges: [ContentfulBlogPostEdge!]!
    field: String!
    fieldValue: String
    group(field: ContentfulBlogPostFieldsEnum!, limit: Int, skip: Int): [ContentfulBlogPostGroupConnection!]!
    max(field: ContentfulBlogPostFieldsEnum!): Float
    min(field: ContentfulBlogPostFieldsEnum!): Float
    nodes: [ContentfulBlogPost!]!
    pageInfo: PageInfo!
    sum(field: ContentfulBlogPostFieldsEnum!): Float
    totalCount: Int!
}

type ContentfulBlogPostSys {
    contentType: ContentfulBlogPostSysContentType
    revision: Int
    type: String
}

type ContentfulBlogPostSysContentType {
    sys: ContentfulBlogPostSysContentTypeSys
}

type ContentfulBlogPostSysContentTypeSys {
    id: String
    linkType: String
    type: String
}

type ContentfulContentType implements Node {
    children: [Node!]!
    description: String
    displayField: String
    id: ID!
    internal: Internal!
    name: String
    parent: Node
    sys: ContentfulContentTypeSys
}

type ContentfulContentTypeConnection {
    distinct(field: ContentfulContentTypeFieldsEnum!): [String!]!
    edges: [ContentfulContentTypeEdge!]!
    group(field: ContentfulContentTypeFieldsEnum!, limit: Int, skip: Int): [ContentfulContentTypeGroupConnection!]!
    max(field: ContentfulContentTypeFieldsEnum!): Float
    min(field: ContentfulContentTypeFieldsEnum!): Float
    nodes: [ContentfulContentType!]!
    pageInfo: PageInfo!
    sum(field: ContentfulContentTypeFieldsEnum!): Float
    totalCount: Int!
}

type ContentfulContentTypeEdge {
    next: ContentfulContentType
    node: ContentfulContentType!
    previous: ContentfulContentType
}

type ContentfulContentTypeGroupConnection {
    distinct(field: ContentfulContentTypeFieldsEnum!): [String!]!
    edges: [ContentfulContentTypeEdge!]!
    field: String!
    fieldValue: String
    group(field: ContentfulContentTypeFieldsEnum!, limit: Int, skip: Int): [ContentfulContentTypeGroupConnection!]!
    max(field: ContentfulContentTypeFieldsEnum!): Float
    min(field: ContentfulContentTypeFieldsEnum!): Float
    nodes: [ContentfulContentType!]!
    pageInfo: PageInfo!
    sum(field: ContentfulContentTypeFieldsEnum!): Float
    totalCount: Int!
}

type ContentfulContentTypeSys {
    type: String
}

type ContentfulEntryConnection {
    distinct(field: ContentfulEntryFieldsEnum!): [String!]!
    edges: [ContentfulEntryEdge!]!
    group(field: ContentfulEntryFieldsEnum!, limit: Int, skip: Int): [ContentfulEntryGroupConnection!]!
    max(field: ContentfulEntryFieldsEnum!): Float
    min(field: ContentfulEntryFieldsEnum!): Float
    nodes: [ContentfulEntry!]!
    pageInfo: PageInfo!
    sum(field: ContentfulEntryFieldsEnum!): Float
    totalCount: Int!
}

type ContentfulEntryEdge {
    next: ContentfulEntry
    node: ContentfulEntry!
    previous: ContentfulEntry
}

type ContentfulEntryGroupConnection {
    distinct(field: ContentfulEntryFieldsEnum!): [String!]!
    edges: [ContentfulEntryEdge!]!
    field: String!
    fieldValue: String
    group(field: ContentfulEntryFieldsEnum!, limit: Int, skip: Int): [ContentfulEntryGroupConnection!]!
    max(field: ContentfulEntryFieldsEnum!): Float
    min(field: ContentfulEntryFieldsEnum!): Float
    nodes: [ContentfulEntry!]!
    pageInfo: PageInfo!
    sum(field: ContentfulEntryFieldsEnum!): Float
    totalCount: Int!
}

type ContentfulTags implements ContentfulEntry & ContentfulReference & Node {
    blogpost: [ContentfulBlogPost]
    children: [Node!]!
    contentful_id: String!
    createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    id: ID!
    internal: Internal!
    node_locale: String!
    parent: Node
    slug: String
    spaceId: String
    sys: ContentfulTagsSys
    title: String
    updatedAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
}

type ContentfulTagsConnection {
    distinct(field: ContentfulTagsFieldsEnum!): [String!]!
    edges: [ContentfulTagsEdge!]!
    group(field: ContentfulTagsFieldsEnum!, limit: Int, skip: Int): [ContentfulTagsGroupConnection!]!
    max(field: ContentfulTagsFieldsEnum!): Float
    min(field: ContentfulTagsFieldsEnum!): Float
    nodes: [ContentfulTags!]!
    pageInfo: PageInfo!
    sum(field: ContentfulTagsFieldsEnum!): Float
    totalCount: Int!
}

type ContentfulTagsEdge {
    next: ContentfulTags
    node: ContentfulTags!
    previous: ContentfulTags
}

type ContentfulTagsGroupConnection {
    distinct(field: ContentfulTagsFieldsEnum!): [String!]!
    edges: [ContentfulTagsEdge!]!
    field: String!
    fieldValue: String
    group(field: ContentfulTagsFieldsEnum!, limit: Int, skip: Int): [ContentfulTagsGroupConnection!]!
    max(field: ContentfulTagsFieldsEnum!): Float
    min(field: ContentfulTagsFieldsEnum!): Float
    nodes: [ContentfulTags!]!
    pageInfo: PageInfo!
    sum(field: ContentfulTagsFieldsEnum!): Float
    totalCount: Int!
}

type ContentfulTagsSys {
    contentType: ContentfulTagsSysContentType
    revision: Int
    type: String
}

type ContentfulTagsSysContentType {
    sys: ContentfulTagsSysContentTypeSys
}

type ContentfulTagsSysContentTypeSys {
    id: String
    linkType: String
    type: String
}

type Directory implements Node {
    absolutePath: String!
    accessTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atimeMs: Float!
    base: String!
    birthTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    birthtime: Date @deprecated(reason: "Use `birthTime` instead")
    birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
    changeTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    children: [Node!]!
    ctime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    ctimeMs: Float!
    dev: Int!
    dir: String!
    ext: String!
    extension: String!
    gid: Int!
    id: ID!
    ino: Float!
    internal: Internal!
    mode: Int!
    modifiedTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtimeMs: Float!
    name: String!
    nlink: Int!
    parent: Node
    prettySize: String!
    rdev: Int!
    relativeDirectory: String!
    relativePath: String!
    root: String!
    size: Int!
    sourceInstanceName: String!
    uid: Int!
}

type DirectoryConnection {
    distinct(field: DirectoryFieldsEnum!): [String!]!
    edges: [DirectoryEdge!]!
    group(field: DirectoryFieldsEnum!, limit: Int, skip: Int): [DirectoryGroupConnection!]!
    max(field: DirectoryFieldsEnum!): Float
    min(field: DirectoryFieldsEnum!): Float
    nodes: [Directory!]!
    pageInfo: PageInfo!
    sum(field: DirectoryFieldsEnum!): Float
    totalCount: Int!
}

type DirectoryEdge {
    next: Directory
    node: Directory!
    previous: Directory
}

type DirectoryGroupConnection {
    distinct(field: DirectoryFieldsEnum!): [String!]!
    edges: [DirectoryEdge!]!
    field: String!
    fieldValue: String
    group(field: DirectoryFieldsEnum!, limit: Int, skip: Int): [DirectoryGroupConnection!]!
    max(field: DirectoryFieldsEnum!): Float
    min(field: DirectoryFieldsEnum!): Float
    nodes: [Directory!]!
    pageInfo: PageInfo!
    sum(field: DirectoryFieldsEnum!): Float
    totalCount: Int!
}

type File implements Node {
    absolutePath: String!
    accessTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atimeMs: Float!
    base: String!
    birthTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    birthtime: Date @deprecated(reason: "Use `birthTime` instead")
    birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
    blksize: Int
    blocks: Int
    changeTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    "Returns the first child node of type ImageSharp or null if there are no children of given type on this node"
    childImageSharp: ImageSharp
    "Returns the first child node of type MarkdownRemark or null if there are no children of given type on this node"
    childMarkdownRemark: MarkdownRemark
    children: [Node!]!
    "Returns all children nodes filtered by type ImageSharp"
    childrenImageSharp: [ImageSharp]
    "Returns all children nodes filtered by type MarkdownRemark"
    childrenMarkdownRemark: [MarkdownRemark]
    ctime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    ctimeMs: Float!
    dev: Int!
    dir: String!
    ext: String!
    extension: String!
    gid: Int!
    id: ID!
    ino: Float!
    internal: Internal!
    mode: Int!
    modifiedTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtimeMs: Float!
    name: String!
    nlink: Int!
    parent: Node
    prettySize: String!
    "Copy file to static directory and return public url to it"
    publicURL: String
    rdev: Int!
    relativeDirectory: String!
    relativePath: String!
    root: String!
    size: Int!
    sourceInstanceName: String!
    uid: Int!
}

type FileConnection {
    distinct(field: FileFieldsEnum!): [String!]!
    edges: [FileEdge!]!
    group(field: FileFieldsEnum!, limit: Int, skip: Int): [FileGroupConnection!]!
    max(field: FileFieldsEnum!): Float
    min(field: FileFieldsEnum!): Float
    nodes: [File!]!
    pageInfo: PageInfo!
    sum(field: FileFieldsEnum!): Float
    totalCount: Int!
}

type FileEdge {
    next: File
    node: File!
    previous: File
}

type FileGroupConnection {
    distinct(field: FileFieldsEnum!): [String!]!
    edges: [FileEdge!]!
    field: String!
    fieldValue: String
    group(field: FileFieldsEnum!, limit: Int, skip: Int): [FileGroupConnection!]!
    max(field: FileFieldsEnum!): Float
    min(field: FileFieldsEnum!): Float
    nodes: [File!]!
    pageInfo: PageInfo!
    sum(field: FileFieldsEnum!): Float
    totalCount: Int!
}

type ImageSharp implements Node {
    children: [Node!]!
    fixed(background: String = "rgba(0,0,0,1)", base64Width: Int, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = AUTO, toFormatBase64: ImageFormat = AUTO, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpFixed
    fluid(
        background: String = "rgba(0,0,0,1)",
        base64Width: Int,
        cropFocus: ImageCropFocus = ATTENTION,
        duotone: DuotoneGradient,
        fit: ImageFit = COVER,
        grayscale: Boolean = false,
        jpegProgressive: Boolean = true,
        jpegQuality: Int,
        maxHeight: Int,
        maxWidth: Int,
        pngCompressionSpeed: Int = 4,
        pngQuality: Int,
        quality: Int,
        rotate: Int = 0,
        sizes: String = "",
        "A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]"
        srcSetBreakpoints: [Int] = [],
        toFormat: ImageFormat = AUTO,
        toFormatBase64: ImageFormat = AUTO,
        traceSVG: Potrace,
        trim: Float = 0.0,
        webpQuality: Int
    ): ImageSharpFluid
    gatsbyImageData(
        """

        If set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.
        If neither width or height is provided, height will be set based on the intrinsic width of the source image.
        """
        aspectRatio: Float,
        "Options to pass to sharp when generating AVIF images."
        avifOptions: AVIFOptions,
        "Background color applied to the wrapper. Also passed to sharp to use as a background when \"letterboxing\" an image to another aspect ratio."
        backgroundColor: String,
        "Options for the low-resolution placeholder image. Set placeholder to \"BLURRED\" to use this"
        blurredOptions: BlurredOptions,
        """

        Specifies the image widths to generate. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,
        based on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].
        It will never generate any images larger than the source.
        """
        breakpoints: [Int],
        """

        The image formats to generate. Valid values are "AUTO" (meaning the same format as the source image), "JPG", "PNG", "WEBP" and "AVIF".
        The default value is [AUTO, WEBP], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
        not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
        both PNG and JPG is not supported and will be ignored.
        """
        formats: [ImageFormat],
        """

        The display height of the generated image for layout = FIXED, and the maximum display height of the largest image for layout = CONSTRAINED.
        The image will be cropped if the aspect ratio does not match the source image. If omitted, it is calculated from the supplied width,
        matching the aspect ratio of the source image.
        """
        height: Int,
        "Options to pass to sharp when generating JPG images."
        jpgOptions: JPGOptions,
        """

        The layout for the image.
        FIXED: A static image sized, that does not resize according to the screen width
        FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if it isn't going to be the full width of the screen.
        CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
        """
        layout: ImageLayout = CONSTRAINED,
        """

        A list of image pixel densities to generate. It will never generate images larger than the source, and will always include a 1x image.
        Default is [ 1, 2 ] for FIXED images, meaning 1x and 2x and [0.25, 0.5, 1, 2] for CONSTRAINED. In this case, an image with a constrained layout
        and width = 400 would generate images at 100, 200, 400 and 800px wide. Ignored for FULL_WIDTH images, which use breakpoints instead
        """
        outputPixelDensities: [Float],
        """

        Format of generated placeholder image, displayed while the main image loads.
        BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
        DOMINANT_COLOR: a solid color, calculated from the dominant color of the image.
        TRACED_SVG: a low-resolution traced SVG of the image.
        NONE: no placeholder. Set "background" to use a fixed background color.
        """
        placeholder: ImagePlaceholder,
        "Options to pass to sharp when generating PNG images."
        pngOptions: PNGOptions,
        "The default quality. This is overridden by any format-specific options"
        quality: Int,
        """

        The "sizes" property, passed to the img tag. This describes the display size of the image.
        This does not affect the generated images, but is used by the browser to decide which images to download.
        You should usually leave this blank, and a suitable value will be calculated. The exception is if a FULL_WIDTH image
        does not actually span the full width of the screen, in which case you should pass the correct size here.
        """
        sizes: String,
        "Options for traced placeholder SVGs. You also should set placeholder to \"TRACED_SVG\"."
        tracedSVGOptions: Potrace,
        "Options to pass to sharp to control cropping and other image manipulations."
        transformOptions: TransformOptions,
        "Options to pass to sharp when generating WebP images."
        webpOptions: WebPOptions,
        """

        The display width of the generated image for layout = FIXED, and the maximum display width of the largest image for layout = CONSTRAINED.
        Ignored if layout = FLUID.
        """
        width: Int
    ): JSON!
    id: ID!
    internal: Internal!
    original: ImageSharpOriginal
    parent: Node
    resize(background: String = "rgba(0,0,0,1)", base64: Boolean = false, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = AUTO, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpResize
}

type ImageSharpConnection {
    distinct(field: ImageSharpFieldsEnum!): [String!]!
    edges: [ImageSharpEdge!]!
    group(field: ImageSharpFieldsEnum!, limit: Int, skip: Int): [ImageSharpGroupConnection!]!
    max(field: ImageSharpFieldsEnum!): Float
    min(field: ImageSharpFieldsEnum!): Float
    nodes: [ImageSharp!]!
    pageInfo: PageInfo!
    sum(field: ImageSharpFieldsEnum!): Float
    totalCount: Int!
}

type ImageSharpEdge {
    next: ImageSharp
    node: ImageSharp!
    previous: ImageSharp
}

type ImageSharpFixed {
    aspectRatio: Float
    base64: String
    height: Float!
    originalName: String
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
    width: Float!
}

type ImageSharpFluid {
    aspectRatio: Float!
    base64: String
    originalImg: String
    originalName: String
    presentationHeight: Int!
    presentationWidth: Int!
    sizes: String!
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
}

type ImageSharpGroupConnection {
    distinct(field: ImageSharpFieldsEnum!): [String!]!
    edges: [ImageSharpEdge!]!
    field: String!
    fieldValue: String
    group(field: ImageSharpFieldsEnum!, limit: Int, skip: Int): [ImageSharpGroupConnection!]!
    max(field: ImageSharpFieldsEnum!): Float
    min(field: ImageSharpFieldsEnum!): Float
    nodes: [ImageSharp!]!
    pageInfo: PageInfo!
    sum(field: ImageSharpFieldsEnum!): Float
    totalCount: Int!
}

type ImageSharpOriginal {
    height: Float
    src: String
    width: Float
}

type ImageSharpResize {
    aspectRatio: Float
    height: Int
    originalName: String
    src: String
    tracedSVG: String
    width: Int
}

type Internal {
    content: String
    contentDigest: String!
    description: String
    fieldOwners: [String]
    ignoreType: Boolean
    mediaType: String
    owner: String!
    type: String!
}

type MarkdownHeading {
    depth: Int
    id: String
    value: String
}

type MarkdownRemark implements Node {
    children: [Node!]!
    excerpt(format: MarkdownExcerptFormats = PLAIN, pruneLength: Int = 140, truncate: Boolean = false): String
    excerptAst(pruneLength: Int = 140, truncate: Boolean = false): JSON
    fileAbsolutePath: String
    frontmatter: MarkdownRemarkFrontmatter
    headings(depth: MarkdownHeadingLevels): [MarkdownHeading]
    html: String
    htmlAst: JSON
    id: ID!
    internal: Internal!
    parent: Node
    rawMarkdownBody: String
    tableOfContents(absolute: Boolean = false, heading: String, maxDepth: Int, pathToSlugField: String = ""): String
    timeToRead: Int
    wordCount: MarkdownWordCount
}

type MarkdownRemarkConnection {
    distinct(field: MarkdownRemarkFieldsEnum!): [String!]!
    edges: [MarkdownRemarkEdge!]!
    group(field: MarkdownRemarkFieldsEnum!, limit: Int, skip: Int): [MarkdownRemarkGroupConnection!]!
    max(field: MarkdownRemarkFieldsEnum!): Float
    min(field: MarkdownRemarkFieldsEnum!): Float
    nodes: [MarkdownRemark!]!
    pageInfo: PageInfo!
    sum(field: MarkdownRemarkFieldsEnum!): Float
    totalCount: Int!
}

type MarkdownRemarkEdge {
    next: MarkdownRemark
    node: MarkdownRemark!
    previous: MarkdownRemark
}

type MarkdownRemarkFrontmatter {
    cover: File
    date(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    path: String
    published: Boolean
    tags: [String]
    title: String
}

type MarkdownRemarkGroupConnection {
    distinct(field: MarkdownRemarkFieldsEnum!): [String!]!
    edges: [MarkdownRemarkEdge!]!
    field: String!
    fieldValue: String
    group(field: MarkdownRemarkFieldsEnum!, limit: Int, skip: Int): [MarkdownRemarkGroupConnection!]!
    max(field: MarkdownRemarkFieldsEnum!): Float
    min(field: MarkdownRemarkFieldsEnum!): Float
    nodes: [MarkdownRemark!]!
    pageInfo: PageInfo!
    sum(field: MarkdownRemarkFieldsEnum!): Float
    totalCount: Int!
}

type MarkdownWordCount {
    paragraphs: Int
    sentences: Int
    words: Int
}

type PageInfo {
    currentPage: Int!
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
    itemCount: Int!
    pageCount: Int!
    perPage: Int
    totalCount: Int!
}

type Query {
    allContentfulAsset(filter: ContentfulAssetFilterInput, limit: Int, skip: Int, sort: ContentfulAssetSortInput): ContentfulAssetConnection!
    allContentfulBlogPost(filter: ContentfulBlogPostFilterInput, limit: Int, skip: Int, sort: ContentfulBlogPostSortInput): ContentfulBlogPostConnection!
    allContentfulBlogPostContentsTextNode(filter: contentfulBlogPostContentsTextNodeFilterInput, limit: Int, skip: Int, sort: contentfulBlogPostContentsTextNodeSortInput): contentfulBlogPostContentsTextNodeConnection!
    allContentfulContentType(filter: ContentfulContentTypeFilterInput, limit: Int, skip: Int, sort: ContentfulContentTypeSortInput): ContentfulContentTypeConnection!
    allContentfulEntry(filter: ContentfulEntryFilterInput, limit: Int, skip: Int, sort: ContentfulEntrySortInput): ContentfulEntryConnection!
    allContentfulTags(filter: ContentfulTagsFilterInput, limit: Int, skip: Int, sort: ContentfulTagsSortInput): ContentfulTagsConnection!
    allDirectory(filter: DirectoryFilterInput, limit: Int, skip: Int, sort: DirectorySortInput): DirectoryConnection!
    allFile(filter: FileFilterInput, limit: Int, skip: Int, sort: FileSortInput): FileConnection!
    allImageSharp(filter: ImageSharpFilterInput, limit: Int, skip: Int, sort: ImageSharpSortInput): ImageSharpConnection!
    allMarkdownRemark(filter: MarkdownRemarkFilterInput, limit: Int, skip: Int, sort: MarkdownRemarkSortInput): MarkdownRemarkConnection!
    allSite(filter: SiteFilterInput, limit: Int, skip: Int, sort: SiteSortInput): SiteConnection!
    allSiteBuildMetadata(filter: SiteBuildMetadataFilterInput, limit: Int, skip: Int, sort: SiteBuildMetadataSortInput): SiteBuildMetadataConnection!
    allSiteFunction(filter: SiteFunctionFilterInput, limit: Int, skip: Int, sort: SiteFunctionSortInput): SiteFunctionConnection!
    allSitePage(filter: SitePageFilterInput, limit: Int, skip: Int, sort: SitePageSortInput): SitePageConnection!
    allSitePlugin(filter: SitePluginFilterInput, limit: Int, skip: Int, sort: SitePluginSortInput): SitePluginConnection!
    contentfulAsset(children: NodeFilterListInput, contentful_id: StringQueryOperatorInput, filename: StringQueryOperatorInput, filesize: IntQueryOperatorInput, gatsbyImage: JSONQueryOperatorInput, gatsbyImageData: JSONQueryOperatorInput, height: IntQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, mimeType: StringQueryOperatorInput, parent: NodeFilterInput, publicUrl: StringQueryOperatorInput, resize: RemoteFileResizeFilterInput, width: IntQueryOperatorInput): ContentfulAsset
    contentfulBlogPost(childContentfulBlogPostContentsTextNode: contentfulBlogPostContentsTextNodeFilterInput, children: NodeFilterListInput, childrenContentfulBlogPostContentsTextNode: contentfulBlogPostContentsTextNodeFilterListInput, contentful_id: StringQueryOperatorInput, contents: contentfulBlogPostContentsTextNodeFilterInput, createdAt: DateQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, node_locale: StringQueryOperatorInput, parent: NodeFilterInput, publishDate: DateQueryOperatorInput, slug: StringQueryOperatorInput, spaceId: StringQueryOperatorInput, sys: ContentfulBlogPostSysFilterInput, tags: ContentfulTagsFilterListInput, title: StringQueryOperatorInput, updatedAt: DateQueryOperatorInput): ContentfulBlogPost
    contentfulBlogPostContentsTextNode(childMarkdownRemark: MarkdownRemarkFilterInput, children: NodeFilterListInput, childrenMarkdownRemark: MarkdownRemarkFilterListInput, contents: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, sys: contentfulBlogPostContentsTextNodeSysFilterInput): contentfulBlogPostContentsTextNode
    contentfulContentType(children: NodeFilterListInput, description: StringQueryOperatorInput, displayField: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, parent: NodeFilterInput, sys: ContentfulContentTypeSysFilterInput): ContentfulContentType
    contentfulEntry(children: NodeFilterListInput, contentful_id: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, node_locale: StringQueryOperatorInput, parent: NodeFilterInput): ContentfulEntry
    contentfulTags(blogpost: ContentfulBlogPostFilterListInput, children: NodeFilterListInput, contentful_id: StringQueryOperatorInput, createdAt: DateQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, node_locale: StringQueryOperatorInput, parent: NodeFilterInput, slug: StringQueryOperatorInput, spaceId: StringQueryOperatorInput, sys: ContentfulTagsSysFilterInput, title: StringQueryOperatorInput, updatedAt: DateQueryOperatorInput): ContentfulTags
    directory(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, changeTime: DateQueryOperatorInput, children: NodeFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): Directory
    file(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, childImageSharp: ImageSharpFilterInput, childMarkdownRemark: MarkdownRemarkFilterInput, children: NodeFilterListInput, childrenImageSharp: ImageSharpFilterListInput, childrenMarkdownRemark: MarkdownRemarkFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, publicURL: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): File
    imageSharp(children: NodeFilterListInput, fixed: ImageSharpFixedFilterInput, fluid: ImageSharpFluidFilterInput, gatsbyImageData: JSONQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, original: ImageSharpOriginalFilterInput, parent: NodeFilterInput, resize: ImageSharpResizeFilterInput): ImageSharp
    markdownRemark(children: NodeFilterListInput, excerpt: StringQueryOperatorInput, excerptAst: JSONQueryOperatorInput, fileAbsolutePath: StringQueryOperatorInput, frontmatter: MarkdownRemarkFrontmatterFilterInput, headings: MarkdownHeadingFilterListInput, html: StringQueryOperatorInput, htmlAst: JSONQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, rawMarkdownBody: StringQueryOperatorInput, tableOfContents: StringQueryOperatorInput, timeToRead: IntQueryOperatorInput, wordCount: MarkdownWordCountFilterInput): MarkdownRemark
    site(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, host: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, jsxRuntime: StringQueryOperatorInput, parent: NodeFilterInput, pathPrefix: StringQueryOperatorInput, polyfill: BooleanQueryOperatorInput, port: IntQueryOperatorInput, siteMetadata: SiteSiteMetadataFilterInput, trailingSlash: StringQueryOperatorInput): Site
    siteBuildMetadata(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput): SiteBuildMetadata
    siteFunction(absoluteCompiledFilePath: StringQueryOperatorInput, children: NodeFilterListInput, functionRoute: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, matchPath: StringQueryOperatorInput, originalAbsoluteFilePath: StringQueryOperatorInput, originalRelativeFilePath: StringQueryOperatorInput, parent: NodeFilterInput, pluginName: StringQueryOperatorInput, relativeCompiledFilePath: StringQueryOperatorInput): SiteFunction
    sitePage(children: NodeFilterListInput, component: StringQueryOperatorInput, componentChunkName: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, internalComponentName: StringQueryOperatorInput, matchPath: StringQueryOperatorInput, pageContext: JSONQueryOperatorInput, parent: NodeFilterInput, path: StringQueryOperatorInput, pluginCreator: SitePluginFilterInput): SitePage
    sitePlugin(browserAPIs: StringQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, nodeAPIs: StringQueryOperatorInput, packageJson: JSONQueryOperatorInput, parent: NodeFilterInput, pluginFilepath: StringQueryOperatorInput, pluginOptions: JSONQueryOperatorInput, resolve: StringQueryOperatorInput, ssrAPIs: StringQueryOperatorInput, version: StringQueryOperatorInput): SitePlugin
}

type RemoteFileResize {
    height: Int
    src: String
    width: Int
}

type Site implements Node {
    buildTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    children: [Node!]!
    host: String
    id: ID!
    internal: Internal!
    jsxRuntime: String
    parent: Node
    pathPrefix: String
    polyfill: Boolean
    port: Int
    siteMetadata: SiteSiteMetadata
    trailingSlash: String
}

type SiteBuildMetadata implements Node {
    buildTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    children: [Node!]!
    id: ID!
    internal: Internal!
    parent: Node
}

type SiteBuildMetadataConnection {
    distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
    edges: [SiteBuildMetadataEdge!]!
    group(field: SiteBuildMetadataFieldsEnum!, limit: Int, skip: Int): [SiteBuildMetadataGroupConnection!]!
    max(field: SiteBuildMetadataFieldsEnum!): Float
    min(field: SiteBuildMetadataFieldsEnum!): Float
    nodes: [SiteBuildMetadata!]!
    pageInfo: PageInfo!
    sum(field: SiteBuildMetadataFieldsEnum!): Float
    totalCount: Int!
}

type SiteBuildMetadataEdge {
    next: SiteBuildMetadata
    node: SiteBuildMetadata!
    previous: SiteBuildMetadata
}

type SiteBuildMetadataGroupConnection {
    distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
    edges: [SiteBuildMetadataEdge!]!
    field: String!
    fieldValue: String
    group(field: SiteBuildMetadataFieldsEnum!, limit: Int, skip: Int): [SiteBuildMetadataGroupConnection!]!
    max(field: SiteBuildMetadataFieldsEnum!): Float
    min(field: SiteBuildMetadataFieldsEnum!): Float
    nodes: [SiteBuildMetadata!]!
    pageInfo: PageInfo!
    sum(field: SiteBuildMetadataFieldsEnum!): Float
    totalCount: Int!
}

type SiteConnection {
    distinct(field: SiteFieldsEnum!): [String!]!
    edges: [SiteEdge!]!
    group(field: SiteFieldsEnum!, limit: Int, skip: Int): [SiteGroupConnection!]!
    max(field: SiteFieldsEnum!): Float
    min(field: SiteFieldsEnum!): Float
    nodes: [Site!]!
    pageInfo: PageInfo!
    sum(field: SiteFieldsEnum!): Float
    totalCount: Int!
}

type SiteEdge {
    next: Site
    node: Site!
    previous: Site
}

type SiteFunction implements Node {
    absoluteCompiledFilePath: String!
    children: [Node!]!
    functionRoute: String!
    id: ID!
    internal: Internal!
    matchPath: String
    originalAbsoluteFilePath: String!
    originalRelativeFilePath: String!
    parent: Node
    pluginName: String!
    relativeCompiledFilePath: String!
}

type SiteFunctionConnection {
    distinct(field: SiteFunctionFieldsEnum!): [String!]!
    edges: [SiteFunctionEdge!]!
    group(field: SiteFunctionFieldsEnum!, limit: Int, skip: Int): [SiteFunctionGroupConnection!]!
    max(field: SiteFunctionFieldsEnum!): Float
    min(field: SiteFunctionFieldsEnum!): Float
    nodes: [SiteFunction!]!
    pageInfo: PageInfo!
    sum(field: SiteFunctionFieldsEnum!): Float
    totalCount: Int!
}

type SiteFunctionEdge {
    next: SiteFunction
    node: SiteFunction!
    previous: SiteFunction
}

type SiteFunctionGroupConnection {
    distinct(field: SiteFunctionFieldsEnum!): [String!]!
    edges: [SiteFunctionEdge!]!
    field: String!
    fieldValue: String
    group(field: SiteFunctionFieldsEnum!, limit: Int, skip: Int): [SiteFunctionGroupConnection!]!
    max(field: SiteFunctionFieldsEnum!): Float
    min(field: SiteFunctionFieldsEnum!): Float
    nodes: [SiteFunction!]!
    pageInfo: PageInfo!
    sum(field: SiteFunctionFieldsEnum!): Float
    totalCount: Int!
}

type SiteGroupConnection {
    distinct(field: SiteFieldsEnum!): [String!]!
    edges: [SiteEdge!]!
    field: String!
    fieldValue: String
    group(field: SiteFieldsEnum!, limit: Int, skip: Int): [SiteGroupConnection!]!
    max(field: SiteFieldsEnum!): Float
    min(field: SiteFieldsEnum!): Float
    nodes: [Site!]!
    pageInfo: PageInfo!
    sum(field: SiteFieldsEnum!): Float
    totalCount: Int!
}

type SitePage implements Node {
    children: [Node!]!
    component: String!
    componentChunkName: String!
    id: ID!
    internal: Internal!
    internalComponentName: String!
    matchPath: String
    pageContext: JSON
    parent: Node
    path: String!
    pluginCreator: SitePlugin
}

type SitePageConnection {
    distinct(field: SitePageFieldsEnum!): [String!]!
    edges: [SitePageEdge!]!
    group(field: SitePageFieldsEnum!, limit: Int, skip: Int): [SitePageGroupConnection!]!
    max(field: SitePageFieldsEnum!): Float
    min(field: SitePageFieldsEnum!): Float
    nodes: [SitePage!]!
    pageInfo: PageInfo!
    sum(field: SitePageFieldsEnum!): Float
    totalCount: Int!
}

type SitePageEdge {
    next: SitePage
    node: SitePage!
    previous: SitePage
}

type SitePageGroupConnection {
    distinct(field: SitePageFieldsEnum!): [String!]!
    edges: [SitePageEdge!]!
    field: String!
    fieldValue: String
    group(field: SitePageFieldsEnum!, limit: Int, skip: Int): [SitePageGroupConnection!]!
    max(field: SitePageFieldsEnum!): Float
    min(field: SitePageFieldsEnum!): Float
    nodes: [SitePage!]!
    pageInfo: PageInfo!
    sum(field: SitePageFieldsEnum!): Float
    totalCount: Int!
}

type SitePlugin implements Node {
    browserAPIs: [String]
    children: [Node!]!
    id: ID!
    internal: Internal!
    name: String
    nodeAPIs: [String]
    packageJson: JSON
    parent: Node
    pluginFilepath: String
    pluginOptions: JSON
    resolve: String
    ssrAPIs: [String]
    version: String
}

type SitePluginConnection {
    distinct(field: SitePluginFieldsEnum!): [String!]!
    edges: [SitePluginEdge!]!
    group(field: SitePluginFieldsEnum!, limit: Int, skip: Int): [SitePluginGroupConnection!]!
    max(field: SitePluginFieldsEnum!): Float
    min(field: SitePluginFieldsEnum!): Float
    nodes: [SitePlugin!]!
    pageInfo: PageInfo!
    sum(field: SitePluginFieldsEnum!): Float
    totalCount: Int!
}

type SitePluginEdge {
    next: SitePlugin
    node: SitePlugin!
    previous: SitePlugin
}

type SitePluginGroupConnection {
    distinct(field: SitePluginFieldsEnum!): [String!]!
    edges: [SitePluginEdge!]!
    field: String!
    fieldValue: String
    group(field: SitePluginFieldsEnum!, limit: Int, skip: Int): [SitePluginGroupConnection!]!
    max(field: SitePluginFieldsEnum!): Float
    min(field: SitePluginFieldsEnum!): Float
    nodes: [SitePlugin!]!
    pageInfo: PageInfo!
    sum(field: SitePluginFieldsEnum!): Float
    totalCount: Int!
}

type SiteSiteMetadata {
    author: String
    backgroundColor: String
    banner: String
    description: String
    favicon: String
    logo: String
    pathPrefix: String
    shortName: String
    siteLanguage: String
    siteUrl: String
    themeColor: String
    title: String
    titleAlt: String
    twitter: String
    url: String
}

type contentfulBlogPostContentsTextNode implements Node {
    "Returns the first child node of type MarkdownRemark or null if there are no children of given type on this node"
    childMarkdownRemark: MarkdownRemark
    children: [Node!]!
    "Returns all children nodes filtered by type MarkdownRemark"
    childrenMarkdownRemark: [MarkdownRemark]
    contents: String
    id: ID!
    internal: Internal!
    parent: Node
    sys: contentfulBlogPostContentsTextNodeSys
}

type contentfulBlogPostContentsTextNodeConnection {
    distinct(field: contentfulBlogPostContentsTextNodeFieldsEnum!): [String!]!
    edges: [contentfulBlogPostContentsTextNodeEdge!]!
    group(field: contentfulBlogPostContentsTextNodeFieldsEnum!, limit: Int, skip: Int): [contentfulBlogPostContentsTextNodeGroupConnection!]!
    max(field: contentfulBlogPostContentsTextNodeFieldsEnum!): Float
    min(field: contentfulBlogPostContentsTextNodeFieldsEnum!): Float
    nodes: [contentfulBlogPostContentsTextNode!]!
    pageInfo: PageInfo!
    sum(field: contentfulBlogPostContentsTextNodeFieldsEnum!): Float
    totalCount: Int!
}

type contentfulBlogPostContentsTextNodeEdge {
    next: contentfulBlogPostContentsTextNode
    node: contentfulBlogPostContentsTextNode!
    previous: contentfulBlogPostContentsTextNode
}

type contentfulBlogPostContentsTextNodeGroupConnection {
    distinct(field: contentfulBlogPostContentsTextNodeFieldsEnum!): [String!]!
    edges: [contentfulBlogPostContentsTextNodeEdge!]!
    field: String!
    fieldValue: String
    group(field: contentfulBlogPostContentsTextNodeFieldsEnum!, limit: Int, skip: Int): [contentfulBlogPostContentsTextNodeGroupConnection!]!
    max(field: contentfulBlogPostContentsTextNodeFieldsEnum!): Float
    min(field: contentfulBlogPostContentsTextNodeFieldsEnum!): Float
    nodes: [contentfulBlogPostContentsTextNode!]!
    pageInfo: PageInfo!
    sum(field: contentfulBlogPostContentsTextNodeFieldsEnum!): Float
    totalCount: Int!
}

type contentfulBlogPostContentsTextNodeSys {
    type: String
}

enum ContentfulAssetFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    contentful_id
    filename
    filesize
    gatsbyImage @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    height
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    mimeType
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    publicUrl
    resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    width
}

enum ContentfulBlogPostFieldsEnum {
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___children
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___children___children
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___children___id
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___fileAbsolutePath
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___frontmatter___date
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___frontmatter___path
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___frontmatter___published
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___frontmatter___tags
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___frontmatter___title
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___headings___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___html
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___htmlAst
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___id
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___internal___content
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___internal___contentDigest
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___internal___description
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___internal___fieldOwners
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___internal___ignoreType
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___internal___mediaType
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___internal___owner
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___internal___type
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___parent___children
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___parent___id
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___rawMarkdownBody
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___timeToRead
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___wordCount___paragraphs
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___wordCount___sentences
    childContentfulBlogPostContentsTextNode___childMarkdownRemark___wordCount___words
    childContentfulBlogPostContentsTextNode___children
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___children
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___children___children
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___children___id
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___fileAbsolutePath
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___frontmatter___date
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___frontmatter___path
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___frontmatter___published
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___frontmatter___tags
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___frontmatter___title
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___headings___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___html
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___htmlAst
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___id
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___internal___content
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___internal___contentDigest
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___internal___description
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___internal___fieldOwners
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___internal___ignoreType
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___internal___mediaType
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___internal___owner
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___internal___type
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___parent___children
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___parent___id
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___rawMarkdownBody
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___timeToRead
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___wordCount___paragraphs
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___wordCount___sentences
    childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___wordCount___words
    childContentfulBlogPostContentsTextNode___children___children
    childContentfulBlogPostContentsTextNode___children___children___children
    childContentfulBlogPostContentsTextNode___children___children___id
    childContentfulBlogPostContentsTextNode___children___id
    childContentfulBlogPostContentsTextNode___children___internal___content
    childContentfulBlogPostContentsTextNode___children___internal___contentDigest
    childContentfulBlogPostContentsTextNode___children___internal___description
    childContentfulBlogPostContentsTextNode___children___internal___fieldOwners
    childContentfulBlogPostContentsTextNode___children___internal___ignoreType
    childContentfulBlogPostContentsTextNode___children___internal___mediaType
    childContentfulBlogPostContentsTextNode___children___internal___owner
    childContentfulBlogPostContentsTextNode___children___internal___type
    childContentfulBlogPostContentsTextNode___children___parent___children
    childContentfulBlogPostContentsTextNode___children___parent___id
    childContentfulBlogPostContentsTextNode___contents
    childContentfulBlogPostContentsTextNode___id
    childContentfulBlogPostContentsTextNode___internal___content
    childContentfulBlogPostContentsTextNode___internal___contentDigest
    childContentfulBlogPostContentsTextNode___internal___description
    childContentfulBlogPostContentsTextNode___internal___fieldOwners
    childContentfulBlogPostContentsTextNode___internal___ignoreType
    childContentfulBlogPostContentsTextNode___internal___mediaType
    childContentfulBlogPostContentsTextNode___internal___owner
    childContentfulBlogPostContentsTextNode___internal___type
    childContentfulBlogPostContentsTextNode___parent___children
    childContentfulBlogPostContentsTextNode___parent___children___children
    childContentfulBlogPostContentsTextNode___parent___children___id
    childContentfulBlogPostContentsTextNode___parent___id
    childContentfulBlogPostContentsTextNode___parent___internal___content
    childContentfulBlogPostContentsTextNode___parent___internal___contentDigest
    childContentfulBlogPostContentsTextNode___parent___internal___description
    childContentfulBlogPostContentsTextNode___parent___internal___fieldOwners
    childContentfulBlogPostContentsTextNode___parent___internal___ignoreType
    childContentfulBlogPostContentsTextNode___parent___internal___mediaType
    childContentfulBlogPostContentsTextNode___parent___internal___owner
    childContentfulBlogPostContentsTextNode___parent___internal___type
    childContentfulBlogPostContentsTextNode___parent___parent___children
    childContentfulBlogPostContentsTextNode___parent___parent___id
    childContentfulBlogPostContentsTextNode___sys___type
    children
    childrenContentfulBlogPostContentsTextNode
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___children
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___children___children
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___children___id
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___fileAbsolutePath
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___frontmatter___date
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___frontmatter___path
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___frontmatter___published
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___frontmatter___tags
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___frontmatter___title
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___headings___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___html
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___htmlAst
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___id
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___internal___content
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___internal___contentDigest
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___internal___description
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___internal___fieldOwners
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___internal___ignoreType
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___internal___mediaType
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___internal___owner
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___internal___type
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___parent___children
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___parent___id
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___rawMarkdownBody
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___timeToRead
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___wordCount___paragraphs
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___wordCount___sentences
    childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___wordCount___words
    childrenContentfulBlogPostContentsTextNode___children
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___children
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___children___children
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___children___id
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___fileAbsolutePath
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___frontmatter___date
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___frontmatter___path
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___frontmatter___published
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___frontmatter___tags
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___frontmatter___title
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___headings___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___html
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___htmlAst
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___id
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___internal___content
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___internal___contentDigest
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___internal___description
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___internal___fieldOwners
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___internal___ignoreType
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___internal___mediaType
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___internal___owner
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___internal___type
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___parent___children
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___parent___id
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___rawMarkdownBody
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___timeToRead
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___wordCount___paragraphs
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___wordCount___sentences
    childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___wordCount___words
    childrenContentfulBlogPostContentsTextNode___children___children
    childrenContentfulBlogPostContentsTextNode___children___children___children
    childrenContentfulBlogPostContentsTextNode___children___children___id
    childrenContentfulBlogPostContentsTextNode___children___id
    childrenContentfulBlogPostContentsTextNode___children___internal___content
    childrenContentfulBlogPostContentsTextNode___children___internal___contentDigest
    childrenContentfulBlogPostContentsTextNode___children___internal___description
    childrenContentfulBlogPostContentsTextNode___children___internal___fieldOwners
    childrenContentfulBlogPostContentsTextNode___children___internal___ignoreType
    childrenContentfulBlogPostContentsTextNode___children___internal___mediaType
    childrenContentfulBlogPostContentsTextNode___children___internal___owner
    childrenContentfulBlogPostContentsTextNode___children___internal___type
    childrenContentfulBlogPostContentsTextNode___children___parent___children
    childrenContentfulBlogPostContentsTextNode___children___parent___id
    childrenContentfulBlogPostContentsTextNode___contents
    childrenContentfulBlogPostContentsTextNode___id
    childrenContentfulBlogPostContentsTextNode___internal___content
    childrenContentfulBlogPostContentsTextNode___internal___contentDigest
    childrenContentfulBlogPostContentsTextNode___internal___description
    childrenContentfulBlogPostContentsTextNode___internal___fieldOwners
    childrenContentfulBlogPostContentsTextNode___internal___ignoreType
    childrenContentfulBlogPostContentsTextNode___internal___mediaType
    childrenContentfulBlogPostContentsTextNode___internal___owner
    childrenContentfulBlogPostContentsTextNode___internal___type
    childrenContentfulBlogPostContentsTextNode___parent___children
    childrenContentfulBlogPostContentsTextNode___parent___children___children
    childrenContentfulBlogPostContentsTextNode___parent___children___id
    childrenContentfulBlogPostContentsTextNode___parent___id
    childrenContentfulBlogPostContentsTextNode___parent___internal___content
    childrenContentfulBlogPostContentsTextNode___parent___internal___contentDigest
    childrenContentfulBlogPostContentsTextNode___parent___internal___description
    childrenContentfulBlogPostContentsTextNode___parent___internal___fieldOwners
    childrenContentfulBlogPostContentsTextNode___parent___internal___ignoreType
    childrenContentfulBlogPostContentsTextNode___parent___internal___mediaType
    childrenContentfulBlogPostContentsTextNode___parent___internal___owner
    childrenContentfulBlogPostContentsTextNode___parent___internal___type
    childrenContentfulBlogPostContentsTextNode___parent___parent___children
    childrenContentfulBlogPostContentsTextNode___parent___parent___id
    childrenContentfulBlogPostContentsTextNode___sys___type
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    contentful_id
    contents___childMarkdownRemark___children
    contents___childMarkdownRemark___children___children
    contents___childMarkdownRemark___children___id
    contents___childMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    contents___childMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    contents___childMarkdownRemark___fileAbsolutePath
    contents___childMarkdownRemark___frontmatter___date
    contents___childMarkdownRemark___frontmatter___path
    contents___childMarkdownRemark___frontmatter___published
    contents___childMarkdownRemark___frontmatter___tags
    contents___childMarkdownRemark___frontmatter___title
    contents___childMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    contents___childMarkdownRemark___headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    contents___childMarkdownRemark___headings___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    contents___childMarkdownRemark___headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    contents___childMarkdownRemark___html
    contents___childMarkdownRemark___htmlAst
    contents___childMarkdownRemark___id
    contents___childMarkdownRemark___internal___content
    contents___childMarkdownRemark___internal___contentDigest
    contents___childMarkdownRemark___internal___description
    contents___childMarkdownRemark___internal___fieldOwners
    contents___childMarkdownRemark___internal___ignoreType
    contents___childMarkdownRemark___internal___mediaType
    contents___childMarkdownRemark___internal___owner
    contents___childMarkdownRemark___internal___type
    contents___childMarkdownRemark___parent___children
    contents___childMarkdownRemark___parent___id
    contents___childMarkdownRemark___rawMarkdownBody
    contents___childMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    contents___childMarkdownRemark___timeToRead
    contents___childMarkdownRemark___wordCount___paragraphs
    contents___childMarkdownRemark___wordCount___sentences
    contents___childMarkdownRemark___wordCount___words
    contents___children
    contents___childrenMarkdownRemark
    contents___childrenMarkdownRemark___children
    contents___childrenMarkdownRemark___children___children
    contents___childrenMarkdownRemark___children___id
    contents___childrenMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    contents___childrenMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    contents___childrenMarkdownRemark___fileAbsolutePath
    contents___childrenMarkdownRemark___frontmatter___date
    contents___childrenMarkdownRemark___frontmatter___path
    contents___childrenMarkdownRemark___frontmatter___published
    contents___childrenMarkdownRemark___frontmatter___tags
    contents___childrenMarkdownRemark___frontmatter___title
    contents___childrenMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    contents___childrenMarkdownRemark___headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    contents___childrenMarkdownRemark___headings___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    contents___childrenMarkdownRemark___headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    contents___childrenMarkdownRemark___html
    contents___childrenMarkdownRemark___htmlAst
    contents___childrenMarkdownRemark___id
    contents___childrenMarkdownRemark___internal___content
    contents___childrenMarkdownRemark___internal___contentDigest
    contents___childrenMarkdownRemark___internal___description
    contents___childrenMarkdownRemark___internal___fieldOwners
    contents___childrenMarkdownRemark___internal___ignoreType
    contents___childrenMarkdownRemark___internal___mediaType
    contents___childrenMarkdownRemark___internal___owner
    contents___childrenMarkdownRemark___internal___type
    contents___childrenMarkdownRemark___parent___children
    contents___childrenMarkdownRemark___parent___id
    contents___childrenMarkdownRemark___rawMarkdownBody
    contents___childrenMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    contents___childrenMarkdownRemark___timeToRead
    contents___childrenMarkdownRemark___wordCount___paragraphs
    contents___childrenMarkdownRemark___wordCount___sentences
    contents___childrenMarkdownRemark___wordCount___words
    contents___children___children
    contents___children___children___children
    contents___children___children___id
    contents___children___id
    contents___children___internal___content
    contents___children___internal___contentDigest
    contents___children___internal___description
    contents___children___internal___fieldOwners
    contents___children___internal___ignoreType
    contents___children___internal___mediaType
    contents___children___internal___owner
    contents___children___internal___type
    contents___children___parent___children
    contents___children___parent___id
    contents___contents
    contents___id
    contents___internal___content
    contents___internal___contentDigest
    contents___internal___description
    contents___internal___fieldOwners
    contents___internal___ignoreType
    contents___internal___mediaType
    contents___internal___owner
    contents___internal___type
    contents___parent___children
    contents___parent___children___children
    contents___parent___children___id
    contents___parent___id
    contents___parent___internal___content
    contents___parent___internal___contentDigest
    contents___parent___internal___description
    contents___parent___internal___fieldOwners
    contents___parent___internal___ignoreType
    contents___parent___internal___mediaType
    contents___parent___internal___owner
    contents___parent___internal___type
    contents___parent___parent___children
    contents___parent___parent___id
    contents___sys___type
    createdAt
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    node_locale
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    publishDate
    slug
    spaceId
    sys___contentType___sys___id
    sys___contentType___sys___linkType
    sys___contentType___sys___type
    sys___revision
    sys___type
    tags
    tags___blogpost
    tags___blogpost___childContentfulBlogPostContentsTextNode___children
    tags___blogpost___childContentfulBlogPostContentsTextNode___childrenMarkdownRemark
    tags___blogpost___childContentfulBlogPostContentsTextNode___contents
    tags___blogpost___childContentfulBlogPostContentsTextNode___id
    tags___blogpost___children
    tags___blogpost___childrenContentfulBlogPostContentsTextNode
    tags___blogpost___childrenContentfulBlogPostContentsTextNode___children
    tags___blogpost___childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark
    tags___blogpost___childrenContentfulBlogPostContentsTextNode___contents
    tags___blogpost___childrenContentfulBlogPostContentsTextNode___id
    tags___blogpost___children___children
    tags___blogpost___children___id
    tags___blogpost___contentful_id
    tags___blogpost___contents___children
    tags___blogpost___contents___childrenMarkdownRemark
    tags___blogpost___contents___contents
    tags___blogpost___contents___id
    tags___blogpost___createdAt
    tags___blogpost___id
    tags___blogpost___internal___content
    tags___blogpost___internal___contentDigest
    tags___blogpost___internal___description
    tags___blogpost___internal___fieldOwners
    tags___blogpost___internal___ignoreType
    tags___blogpost___internal___mediaType
    tags___blogpost___internal___owner
    tags___blogpost___internal___type
    tags___blogpost___node_locale
    tags___blogpost___parent___children
    tags___blogpost___parent___id
    tags___blogpost___publishDate
    tags___blogpost___slug
    tags___blogpost___spaceId
    tags___blogpost___sys___revision
    tags___blogpost___sys___type
    tags___blogpost___tags
    tags___blogpost___tags___blogpost
    tags___blogpost___tags___children
    tags___blogpost___tags___contentful_id
    tags___blogpost___tags___createdAt
    tags___blogpost___tags___id
    tags___blogpost___tags___node_locale
    tags___blogpost___tags___slug
    tags___blogpost___tags___spaceId
    tags___blogpost___tags___title
    tags___blogpost___tags___updatedAt
    tags___blogpost___title
    tags___blogpost___updatedAt
    tags___children
    tags___children___children
    tags___children___children___children
    tags___children___children___id
    tags___children___id
    tags___children___internal___content
    tags___children___internal___contentDigest
    tags___children___internal___description
    tags___children___internal___fieldOwners
    tags___children___internal___ignoreType
    tags___children___internal___mediaType
    tags___children___internal___owner
    tags___children___internal___type
    tags___children___parent___children
    tags___children___parent___id
    tags___contentful_id
    tags___createdAt
    tags___id
    tags___internal___content
    tags___internal___contentDigest
    tags___internal___description
    tags___internal___fieldOwners
    tags___internal___ignoreType
    tags___internal___mediaType
    tags___internal___owner
    tags___internal___type
    tags___node_locale
    tags___parent___children
    tags___parent___children___children
    tags___parent___children___id
    tags___parent___id
    tags___parent___internal___content
    tags___parent___internal___contentDigest
    tags___parent___internal___description
    tags___parent___internal___fieldOwners
    tags___parent___internal___ignoreType
    tags___parent___internal___mediaType
    tags___parent___internal___owner
    tags___parent___internal___type
    tags___parent___parent___children
    tags___parent___parent___id
    tags___slug
    tags___spaceId
    tags___sys___revision
    tags___sys___type
    tags___title
    tags___updatedAt
    title
    updatedAt
}

enum ContentfulContentTypeFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    description
    displayField
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    name
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    sys___type
}

enum ContentfulEntryFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    contentful_id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    node_locale
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
}

enum ContentfulImageCropFocus {
    BOTTOM
    BOTTOM_LEFT
    BOTTOM_RIGHT
    CENTER
    FACE
    FACES
    LEFT
    RIGHT
    TOP
    TOP_LEFT
    TOP_RIGHT
}

enum ContentfulTagsFieldsEnum {
    blogpost
    blogpost___childContentfulBlogPostContentsTextNode___childMarkdownRemark___children
    blogpost___childContentfulBlogPostContentsTextNode___childMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    blogpost___childContentfulBlogPostContentsTextNode___childMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    blogpost___childContentfulBlogPostContentsTextNode___childMarkdownRemark___fileAbsolutePath
    blogpost___childContentfulBlogPostContentsTextNode___childMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    blogpost___childContentfulBlogPostContentsTextNode___childMarkdownRemark___html
    blogpost___childContentfulBlogPostContentsTextNode___childMarkdownRemark___htmlAst
    blogpost___childContentfulBlogPostContentsTextNode___childMarkdownRemark___id
    blogpost___childContentfulBlogPostContentsTextNode___childMarkdownRemark___rawMarkdownBody
    blogpost___childContentfulBlogPostContentsTextNode___childMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    blogpost___childContentfulBlogPostContentsTextNode___childMarkdownRemark___timeToRead
    blogpost___childContentfulBlogPostContentsTextNode___children
    blogpost___childContentfulBlogPostContentsTextNode___childrenMarkdownRemark
    blogpost___childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___children
    blogpost___childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    blogpost___childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    blogpost___childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___fileAbsolutePath
    blogpost___childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    blogpost___childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___html
    blogpost___childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___htmlAst
    blogpost___childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___id
    blogpost___childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___rawMarkdownBody
    blogpost___childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    blogpost___childContentfulBlogPostContentsTextNode___childrenMarkdownRemark___timeToRead
    blogpost___childContentfulBlogPostContentsTextNode___children___children
    blogpost___childContentfulBlogPostContentsTextNode___children___id
    blogpost___childContentfulBlogPostContentsTextNode___contents
    blogpost___childContentfulBlogPostContentsTextNode___id
    blogpost___childContentfulBlogPostContentsTextNode___internal___content
    blogpost___childContentfulBlogPostContentsTextNode___internal___contentDigest
    blogpost___childContentfulBlogPostContentsTextNode___internal___description
    blogpost___childContentfulBlogPostContentsTextNode___internal___fieldOwners
    blogpost___childContentfulBlogPostContentsTextNode___internal___ignoreType
    blogpost___childContentfulBlogPostContentsTextNode___internal___mediaType
    blogpost___childContentfulBlogPostContentsTextNode___internal___owner
    blogpost___childContentfulBlogPostContentsTextNode___internal___type
    blogpost___childContentfulBlogPostContentsTextNode___parent___children
    blogpost___childContentfulBlogPostContentsTextNode___parent___id
    blogpost___childContentfulBlogPostContentsTextNode___sys___type
    blogpost___children
    blogpost___childrenContentfulBlogPostContentsTextNode
    blogpost___childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___children
    blogpost___childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    blogpost___childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    blogpost___childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___fileAbsolutePath
    blogpost___childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    blogpost___childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___html
    blogpost___childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___htmlAst
    blogpost___childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___id
    blogpost___childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___rawMarkdownBody
    blogpost___childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    blogpost___childrenContentfulBlogPostContentsTextNode___childMarkdownRemark___timeToRead
    blogpost___childrenContentfulBlogPostContentsTextNode___children
    blogpost___childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark
    blogpost___childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___children
    blogpost___childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    blogpost___childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    blogpost___childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___fileAbsolutePath
    blogpost___childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    blogpost___childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___html
    blogpost___childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___htmlAst
    blogpost___childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___id
    blogpost___childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___rawMarkdownBody
    blogpost___childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    blogpost___childrenContentfulBlogPostContentsTextNode___childrenMarkdownRemark___timeToRead
    blogpost___childrenContentfulBlogPostContentsTextNode___children___children
    blogpost___childrenContentfulBlogPostContentsTextNode___children___id
    blogpost___childrenContentfulBlogPostContentsTextNode___contents
    blogpost___childrenContentfulBlogPostContentsTextNode___id
    blogpost___childrenContentfulBlogPostContentsTextNode___internal___content
    blogpost___childrenContentfulBlogPostContentsTextNode___internal___contentDigest
    blogpost___childrenContentfulBlogPostContentsTextNode___internal___description
    blogpost___childrenContentfulBlogPostContentsTextNode___internal___fieldOwners
    blogpost___childrenContentfulBlogPostContentsTextNode___internal___ignoreType
    blogpost___childrenContentfulBlogPostContentsTextNode___internal___mediaType
    blogpost___childrenContentfulBlogPostContentsTextNode___internal___owner
    blogpost___childrenContentfulBlogPostContentsTextNode___internal___type
    blogpost___childrenContentfulBlogPostContentsTextNode___parent___children
    blogpost___childrenContentfulBlogPostContentsTextNode___parent___id
    blogpost___childrenContentfulBlogPostContentsTextNode___sys___type
    blogpost___children___children
    blogpost___children___children___children
    blogpost___children___children___id
    blogpost___children___id
    blogpost___children___internal___content
    blogpost___children___internal___contentDigest
    blogpost___children___internal___description
    blogpost___children___internal___fieldOwners
    blogpost___children___internal___ignoreType
    blogpost___children___internal___mediaType
    blogpost___children___internal___owner
    blogpost___children___internal___type
    blogpost___children___parent___children
    blogpost___children___parent___id
    blogpost___contentful_id
    blogpost___contents___childMarkdownRemark___children
    blogpost___contents___childMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    blogpost___contents___childMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    blogpost___contents___childMarkdownRemark___fileAbsolutePath
    blogpost___contents___childMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    blogpost___contents___childMarkdownRemark___html
    blogpost___contents___childMarkdownRemark___htmlAst
    blogpost___contents___childMarkdownRemark___id
    blogpost___contents___childMarkdownRemark___rawMarkdownBody
    blogpost___contents___childMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    blogpost___contents___childMarkdownRemark___timeToRead
    blogpost___contents___children
    blogpost___contents___childrenMarkdownRemark
    blogpost___contents___childrenMarkdownRemark___children
    blogpost___contents___childrenMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    blogpost___contents___childrenMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    blogpost___contents___childrenMarkdownRemark___fileAbsolutePath
    blogpost___contents___childrenMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    blogpost___contents___childrenMarkdownRemark___html
    blogpost___contents___childrenMarkdownRemark___htmlAst
    blogpost___contents___childrenMarkdownRemark___id
    blogpost___contents___childrenMarkdownRemark___rawMarkdownBody
    blogpost___contents___childrenMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    blogpost___contents___childrenMarkdownRemark___timeToRead
    blogpost___contents___children___children
    blogpost___contents___children___id
    blogpost___contents___contents
    blogpost___contents___id
    blogpost___contents___internal___content
    blogpost___contents___internal___contentDigest
    blogpost___contents___internal___description
    blogpost___contents___internal___fieldOwners
    blogpost___contents___internal___ignoreType
    blogpost___contents___internal___mediaType
    blogpost___contents___internal___owner
    blogpost___contents___internal___type
    blogpost___contents___parent___children
    blogpost___contents___parent___id
    blogpost___contents___sys___type
    blogpost___createdAt
    blogpost___id
    blogpost___internal___content
    blogpost___internal___contentDigest
    blogpost___internal___description
    blogpost___internal___fieldOwners
    blogpost___internal___ignoreType
    blogpost___internal___mediaType
    blogpost___internal___owner
    blogpost___internal___type
    blogpost___node_locale
    blogpost___parent___children
    blogpost___parent___children___children
    blogpost___parent___children___id
    blogpost___parent___id
    blogpost___parent___internal___content
    blogpost___parent___internal___contentDigest
    blogpost___parent___internal___description
    blogpost___parent___internal___fieldOwners
    blogpost___parent___internal___ignoreType
    blogpost___parent___internal___mediaType
    blogpost___parent___internal___owner
    blogpost___parent___internal___type
    blogpost___parent___parent___children
    blogpost___parent___parent___id
    blogpost___publishDate
    blogpost___slug
    blogpost___spaceId
    blogpost___sys___revision
    blogpost___sys___type
    blogpost___tags
    blogpost___tags___blogpost
    blogpost___tags___blogpost___children
    blogpost___tags___blogpost___childrenContentfulBlogPostContentsTextNode
    blogpost___tags___blogpost___contentful_id
    blogpost___tags___blogpost___createdAt
    blogpost___tags___blogpost___id
    blogpost___tags___blogpost___node_locale
    blogpost___tags___blogpost___publishDate
    blogpost___tags___blogpost___slug
    blogpost___tags___blogpost___spaceId
    blogpost___tags___blogpost___tags
    blogpost___tags___blogpost___title
    blogpost___tags___blogpost___updatedAt
    blogpost___tags___children
    blogpost___tags___children___children
    blogpost___tags___children___id
    blogpost___tags___contentful_id
    blogpost___tags___createdAt
    blogpost___tags___id
    blogpost___tags___internal___content
    blogpost___tags___internal___contentDigest
    blogpost___tags___internal___description
    blogpost___tags___internal___fieldOwners
    blogpost___tags___internal___ignoreType
    blogpost___tags___internal___mediaType
    blogpost___tags___internal___owner
    blogpost___tags___internal___type
    blogpost___tags___node_locale
    blogpost___tags___parent___children
    blogpost___tags___parent___id
    blogpost___tags___slug
    blogpost___tags___spaceId
    blogpost___tags___sys___revision
    blogpost___tags___sys___type
    blogpost___tags___title
    blogpost___tags___updatedAt
    blogpost___title
    blogpost___updatedAt
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    contentful_id
    createdAt
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    node_locale
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    slug
    spaceId
    sys___contentType___sys___id
    sys___contentType___sys___linkType
    sys___contentType___sys___type
    sys___revision
    sys___type
    title
    updatedAt
}

enum DirectoryFieldsEnum {
    absolutePath
    accessTime
    atime
    atimeMs
    base
    birthTime
    birthtime
    birthtimeMs
    changeTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    ctime
    ctimeMs
    dev
    dir
    ext
    extension
    gid
    id
    ino
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    mode
    modifiedTime
    mtime
    mtimeMs
    name
    nlink
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    prettySize
    rdev
    relativeDirectory
    relativePath
    root
    size
    sourceInstanceName
    uid
}

enum FileFieldsEnum {
    absolutePath
    accessTime
    atime
    atimeMs
    base
    birthTime
    birthtime
    birthtimeMs
    blksize
    blocks
    changeTime
    childImageSharp___children
    childImageSharp___children___children
    childImageSharp___children___children___children
    childImageSharp___children___children___id
    childImageSharp___children___id
    childImageSharp___children___internal___content
    childImageSharp___children___internal___contentDigest
    childImageSharp___children___internal___description
    childImageSharp___children___internal___fieldOwners
    childImageSharp___children___internal___ignoreType
    childImageSharp___children___internal___mediaType
    childImageSharp___children___internal___owner
    childImageSharp___children___internal___type
    childImageSharp___children___parent___children
    childImageSharp___children___parent___id
    childImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___id
    childImageSharp___internal___content
    childImageSharp___internal___contentDigest
    childImageSharp___internal___description
    childImageSharp___internal___fieldOwners
    childImageSharp___internal___ignoreType
    childImageSharp___internal___mediaType
    childImageSharp___internal___owner
    childImageSharp___internal___type
    childImageSharp___original___height
    childImageSharp___original___src
    childImageSharp___original___width
    childImageSharp___parent___children
    childImageSharp___parent___children___children
    childImageSharp___parent___children___id
    childImageSharp___parent___id
    childImageSharp___parent___internal___content
    childImageSharp___parent___internal___contentDigest
    childImageSharp___parent___internal___description
    childImageSharp___parent___internal___fieldOwners
    childImageSharp___parent___internal___ignoreType
    childImageSharp___parent___internal___mediaType
    childImageSharp___parent___internal___owner
    childImageSharp___parent___internal___type
    childImageSharp___parent___parent___children
    childImageSharp___parent___parent___id
    childImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___children
    childMarkdownRemark___children___children
    childMarkdownRemark___children___children___children
    childMarkdownRemark___children___children___id
    childMarkdownRemark___children___id
    childMarkdownRemark___children___internal___content
    childMarkdownRemark___children___internal___contentDigest
    childMarkdownRemark___children___internal___description
    childMarkdownRemark___children___internal___fieldOwners
    childMarkdownRemark___children___internal___ignoreType
    childMarkdownRemark___children___internal___mediaType
    childMarkdownRemark___children___internal___owner
    childMarkdownRemark___children___internal___type
    childMarkdownRemark___children___parent___children
    childMarkdownRemark___children___parent___id
    childMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___fileAbsolutePath
    childMarkdownRemark___frontmatter___cover___absolutePath
    childMarkdownRemark___frontmatter___cover___accessTime
    childMarkdownRemark___frontmatter___cover___atime
    childMarkdownRemark___frontmatter___cover___atimeMs
    childMarkdownRemark___frontmatter___cover___base
    childMarkdownRemark___frontmatter___cover___birthTime
    childMarkdownRemark___frontmatter___cover___birthtime
    childMarkdownRemark___frontmatter___cover___birthtimeMs
    childMarkdownRemark___frontmatter___cover___blksize
    childMarkdownRemark___frontmatter___cover___blocks
    childMarkdownRemark___frontmatter___cover___changeTime
    childMarkdownRemark___frontmatter___cover___children
    childMarkdownRemark___frontmatter___cover___childrenImageSharp
    childMarkdownRemark___frontmatter___cover___childrenMarkdownRemark
    childMarkdownRemark___frontmatter___cover___ctime
    childMarkdownRemark___frontmatter___cover___ctimeMs
    childMarkdownRemark___frontmatter___cover___dev
    childMarkdownRemark___frontmatter___cover___dir
    childMarkdownRemark___frontmatter___cover___ext
    childMarkdownRemark___frontmatter___cover___extension
    childMarkdownRemark___frontmatter___cover___gid
    childMarkdownRemark___frontmatter___cover___id
    childMarkdownRemark___frontmatter___cover___ino
    childMarkdownRemark___frontmatter___cover___mode
    childMarkdownRemark___frontmatter___cover___modifiedTime
    childMarkdownRemark___frontmatter___cover___mtime
    childMarkdownRemark___frontmatter___cover___mtimeMs
    childMarkdownRemark___frontmatter___cover___name
    childMarkdownRemark___frontmatter___cover___nlink
    childMarkdownRemark___frontmatter___cover___prettySize
    childMarkdownRemark___frontmatter___cover___publicURL
    childMarkdownRemark___frontmatter___cover___rdev
    childMarkdownRemark___frontmatter___cover___relativeDirectory
    childMarkdownRemark___frontmatter___cover___relativePath
    childMarkdownRemark___frontmatter___cover___root
    childMarkdownRemark___frontmatter___cover___size
    childMarkdownRemark___frontmatter___cover___sourceInstanceName
    childMarkdownRemark___frontmatter___cover___uid
    childMarkdownRemark___frontmatter___date
    childMarkdownRemark___frontmatter___path
    childMarkdownRemark___frontmatter___published
    childMarkdownRemark___frontmatter___tags
    childMarkdownRemark___frontmatter___title
    childMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___headings___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___html
    childMarkdownRemark___htmlAst
    childMarkdownRemark___id
    childMarkdownRemark___internal___content
    childMarkdownRemark___internal___contentDigest
    childMarkdownRemark___internal___description
    childMarkdownRemark___internal___fieldOwners
    childMarkdownRemark___internal___ignoreType
    childMarkdownRemark___internal___mediaType
    childMarkdownRemark___internal___owner
    childMarkdownRemark___internal___type
    childMarkdownRemark___parent___children
    childMarkdownRemark___parent___children___children
    childMarkdownRemark___parent___children___id
    childMarkdownRemark___parent___id
    childMarkdownRemark___parent___internal___content
    childMarkdownRemark___parent___internal___contentDigest
    childMarkdownRemark___parent___internal___description
    childMarkdownRemark___parent___internal___fieldOwners
    childMarkdownRemark___parent___internal___ignoreType
    childMarkdownRemark___parent___internal___mediaType
    childMarkdownRemark___parent___internal___owner
    childMarkdownRemark___parent___internal___type
    childMarkdownRemark___parent___parent___children
    childMarkdownRemark___parent___parent___id
    childMarkdownRemark___rawMarkdownBody
    childMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___timeToRead
    childMarkdownRemark___wordCount___paragraphs
    childMarkdownRemark___wordCount___sentences
    childMarkdownRemark___wordCount___words
    children
    childrenImageSharp
    childrenImageSharp___children
    childrenImageSharp___children___children
    childrenImageSharp___children___children___children
    childrenImageSharp___children___children___id
    childrenImageSharp___children___id
    childrenImageSharp___children___internal___content
    childrenImageSharp___children___internal___contentDigest
    childrenImageSharp___children___internal___description
    childrenImageSharp___children___internal___fieldOwners
    childrenImageSharp___children___internal___ignoreType
    childrenImageSharp___children___internal___mediaType
    childrenImageSharp___children___internal___owner
    childrenImageSharp___children___internal___type
    childrenImageSharp___children___parent___children
    childrenImageSharp___children___parent___id
    childrenImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___id
    childrenImageSharp___internal___content
    childrenImageSharp___internal___contentDigest
    childrenImageSharp___internal___description
    childrenImageSharp___internal___fieldOwners
    childrenImageSharp___internal___ignoreType
    childrenImageSharp___internal___mediaType
    childrenImageSharp___internal___owner
    childrenImageSharp___internal___type
    childrenImageSharp___original___height
    childrenImageSharp___original___src
    childrenImageSharp___original___width
    childrenImageSharp___parent___children
    childrenImageSharp___parent___children___children
    childrenImageSharp___parent___children___id
    childrenImageSharp___parent___id
    childrenImageSharp___parent___internal___content
    childrenImageSharp___parent___internal___contentDigest
    childrenImageSharp___parent___internal___description
    childrenImageSharp___parent___internal___fieldOwners
    childrenImageSharp___parent___internal___ignoreType
    childrenImageSharp___parent___internal___mediaType
    childrenImageSharp___parent___internal___owner
    childrenImageSharp___parent___internal___type
    childrenImageSharp___parent___parent___children
    childrenImageSharp___parent___parent___id
    childrenImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark
    childrenMarkdownRemark___children
    childrenMarkdownRemark___children___children
    childrenMarkdownRemark___children___children___children
    childrenMarkdownRemark___children___children___id
    childrenMarkdownRemark___children___id
    childrenMarkdownRemark___children___internal___content
    childrenMarkdownRemark___children___internal___contentDigest
    childrenMarkdownRemark___children___internal___description
    childrenMarkdownRemark___children___internal___fieldOwners
    childrenMarkdownRemark___children___internal___ignoreType
    childrenMarkdownRemark___children___internal___mediaType
    childrenMarkdownRemark___children___internal___owner
    childrenMarkdownRemark___children___internal___type
    childrenMarkdownRemark___children___parent___children
    childrenMarkdownRemark___children___parent___id
    childrenMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___fileAbsolutePath
    childrenMarkdownRemark___frontmatter___cover___absolutePath
    childrenMarkdownRemark___frontmatter___cover___accessTime
    childrenMarkdownRemark___frontmatter___cover___atime
    childrenMarkdownRemark___frontmatter___cover___atimeMs
    childrenMarkdownRemark___frontmatter___cover___base
    childrenMarkdownRemark___frontmatter___cover___birthTime
    childrenMarkdownRemark___frontmatter___cover___birthtime
    childrenMarkdownRemark___frontmatter___cover___birthtimeMs
    childrenMarkdownRemark___frontmatter___cover___blksize
    childrenMarkdownRemark___frontmatter___cover___blocks
    childrenMarkdownRemark___frontmatter___cover___changeTime
    childrenMarkdownRemark___frontmatter___cover___children
    childrenMarkdownRemark___frontmatter___cover___childrenImageSharp
    childrenMarkdownRemark___frontmatter___cover___childrenMarkdownRemark
    childrenMarkdownRemark___frontmatter___cover___ctime
    childrenMarkdownRemark___frontmatter___cover___ctimeMs
    childrenMarkdownRemark___frontmatter___cover___dev
    childrenMarkdownRemark___frontmatter___cover___dir
    childrenMarkdownRemark___frontmatter___cover___ext
    childrenMarkdownRemark___frontmatter___cover___extension
    childrenMarkdownRemark___frontmatter___cover___gid
    childrenMarkdownRemark___frontmatter___cover___id
    childrenMarkdownRemark___frontmatter___cover___ino
    childrenMarkdownRemark___frontmatter___cover___mode
    childrenMarkdownRemark___frontmatter___cover___modifiedTime
    childrenMarkdownRemark___frontmatter___cover___mtime
    childrenMarkdownRemark___frontmatter___cover___mtimeMs
    childrenMarkdownRemark___frontmatter___cover___name
    childrenMarkdownRemark___frontmatter___cover___nlink
    childrenMarkdownRemark___frontmatter___cover___prettySize
    childrenMarkdownRemark___frontmatter___cover___publicURL
    childrenMarkdownRemark___frontmatter___cover___rdev
    childrenMarkdownRemark___frontmatter___cover___relativeDirectory
    childrenMarkdownRemark___frontmatter___cover___relativePath
    childrenMarkdownRemark___frontmatter___cover___root
    childrenMarkdownRemark___frontmatter___cover___size
    childrenMarkdownRemark___frontmatter___cover___sourceInstanceName
    childrenMarkdownRemark___frontmatter___cover___uid
    childrenMarkdownRemark___frontmatter___date
    childrenMarkdownRemark___frontmatter___path
    childrenMarkdownRemark___frontmatter___published
    childrenMarkdownRemark___frontmatter___tags
    childrenMarkdownRemark___frontmatter___title
    childrenMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___headings___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___html
    childrenMarkdownRemark___htmlAst
    childrenMarkdownRemark___id
    childrenMarkdownRemark___internal___content
    childrenMarkdownRemark___internal___contentDigest
    childrenMarkdownRemark___internal___description
    childrenMarkdownRemark___internal___fieldOwners
    childrenMarkdownRemark___internal___ignoreType
    childrenMarkdownRemark___internal___mediaType
    childrenMarkdownRemark___internal___owner
    childrenMarkdownRemark___internal___type
    childrenMarkdownRemark___parent___children
    childrenMarkdownRemark___parent___children___children
    childrenMarkdownRemark___parent___children___id
    childrenMarkdownRemark___parent___id
    childrenMarkdownRemark___parent___internal___content
    childrenMarkdownRemark___parent___internal___contentDigest
    childrenMarkdownRemark___parent___internal___description
    childrenMarkdownRemark___parent___internal___fieldOwners
    childrenMarkdownRemark___parent___internal___ignoreType
    childrenMarkdownRemark___parent___internal___mediaType
    childrenMarkdownRemark___parent___internal___owner
    childrenMarkdownRemark___parent___internal___type
    childrenMarkdownRemark___parent___parent___children
    childrenMarkdownRemark___parent___parent___id
    childrenMarkdownRemark___rawMarkdownBody
    childrenMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___timeToRead
    childrenMarkdownRemark___wordCount___paragraphs
    childrenMarkdownRemark___wordCount___sentences
    childrenMarkdownRemark___wordCount___words
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    ctime
    ctimeMs
    dev
    dir
    ext
    extension
    gid
    id
    ino
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    mode
    modifiedTime
    mtime
    mtimeMs
    name
    nlink
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    prettySize
    publicURL
    rdev
    relativeDirectory
    relativePath
    root
    size
    sourceInstanceName
    uid
}

enum GatsbyImageFormat {
    AUTO
    AVIF
    JPG
    NO_CHANGE
    PNG
    WEBP
}

enum GatsbyImageLayout {
    CONSTRAINED
    FIXED
    FULL_WIDTH
}

enum GatsbyImagePlaceholder {
    BLURRED
    DOMINANT_COLOR
    NONE
    TRACED_SVG
}

enum ImageCropFocus {
    ATTENTION
    CENTER
    EAST
    ENTROPY
    NORTH
    NORTHEAST
    NORTHWEST
    SOUTH
    SOUTHEAST
    SOUTHWEST
    WEST
}

enum ImageFit {
    CONTAIN
    COVER
    FILL
    INSIDE
    OUTSIDE
}

enum ImageFormat {
    AUTO
    AVIF
    JPG
    NO_CHANGE
    PNG
    WEBP
}

enum ImageLayout {
    CONSTRAINED
    FIXED
    FULL_WIDTH
}

enum ImagePlaceholder {
    BLURRED
    DOMINANT_COLOR
    NONE
    TRACED_SVG
}

enum ImageResizingBehavior {
    "Crop a part of the original image to match the specified size."
    CROP
    "Crop the image to the specified dimensions, if the original image is smaller than these dimensions, then the image will be upscaled."
    FILL
    NO_CHANGE
    "Same as the default resizing, but adds padding so that the generated image has the specified dimensions."
    PAD
    "Scale the image regardless of the original aspect ratio."
    SCALE
    "When used in association with the f parameter below, creates a thumbnail from the image based on a focus area."
    THUMB
}

enum ImageSharpFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    original___height
    original___src
    original___width
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
}

enum MarkdownExcerptFormats {
    HTML
    MARKDOWN
    PLAIN
}

enum MarkdownHeadingLevels {
    h1
    h2
    h3
    h4
    h5
    h6
}

enum MarkdownRemarkFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fileAbsolutePath
    frontmatter___cover___absolutePath
    frontmatter___cover___accessTime
    frontmatter___cover___atime
    frontmatter___cover___atimeMs
    frontmatter___cover___base
    frontmatter___cover___birthTime
    frontmatter___cover___birthtime
    frontmatter___cover___birthtimeMs
    frontmatter___cover___blksize
    frontmatter___cover___blocks
    frontmatter___cover___changeTime
    frontmatter___cover___childImageSharp___children
    frontmatter___cover___childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___cover___childImageSharp___id
    frontmatter___cover___childMarkdownRemark___children
    frontmatter___cover___childMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___cover___childMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___cover___childMarkdownRemark___fileAbsolutePath
    frontmatter___cover___childMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___cover___childMarkdownRemark___html
    frontmatter___cover___childMarkdownRemark___htmlAst
    frontmatter___cover___childMarkdownRemark___id
    frontmatter___cover___childMarkdownRemark___rawMarkdownBody
    frontmatter___cover___childMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___cover___childMarkdownRemark___timeToRead
    frontmatter___cover___children
    frontmatter___cover___childrenImageSharp
    frontmatter___cover___childrenImageSharp___children
    frontmatter___cover___childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___cover___childrenImageSharp___id
    frontmatter___cover___childrenMarkdownRemark
    frontmatter___cover___childrenMarkdownRemark___children
    frontmatter___cover___childrenMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___cover___childrenMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___cover___childrenMarkdownRemark___fileAbsolutePath
    frontmatter___cover___childrenMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___cover___childrenMarkdownRemark___html
    frontmatter___cover___childrenMarkdownRemark___htmlAst
    frontmatter___cover___childrenMarkdownRemark___id
    frontmatter___cover___childrenMarkdownRemark___rawMarkdownBody
    frontmatter___cover___childrenMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___cover___childrenMarkdownRemark___timeToRead
    frontmatter___cover___children___children
    frontmatter___cover___children___id
    frontmatter___cover___ctime
    frontmatter___cover___ctimeMs
    frontmatter___cover___dev
    frontmatter___cover___dir
    frontmatter___cover___ext
    frontmatter___cover___extension
    frontmatter___cover___gid
    frontmatter___cover___id
    frontmatter___cover___ino
    frontmatter___cover___internal___content
    frontmatter___cover___internal___contentDigest
    frontmatter___cover___internal___description
    frontmatter___cover___internal___fieldOwners
    frontmatter___cover___internal___ignoreType
    frontmatter___cover___internal___mediaType
    frontmatter___cover___internal___owner
    frontmatter___cover___internal___type
    frontmatter___cover___mode
    frontmatter___cover___modifiedTime
    frontmatter___cover___mtime
    frontmatter___cover___mtimeMs
    frontmatter___cover___name
    frontmatter___cover___nlink
    frontmatter___cover___parent___children
    frontmatter___cover___parent___id
    frontmatter___cover___prettySize
    frontmatter___cover___publicURL
    frontmatter___cover___rdev
    frontmatter___cover___relativeDirectory
    frontmatter___cover___relativePath
    frontmatter___cover___root
    frontmatter___cover___size
    frontmatter___cover___sourceInstanceName
    frontmatter___cover___uid
    frontmatter___date
    frontmatter___path
    frontmatter___published
    frontmatter___tags
    frontmatter___title
    headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    headings___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    html
    htmlAst
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    rawMarkdownBody
    tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    timeToRead
    wordCount___paragraphs
    wordCount___sentences
    wordCount___words
}

enum PotraceTurnPolicy {
    TURNPOLICY_BLACK
    TURNPOLICY_LEFT
    TURNPOLICY_MAJORITY
    TURNPOLICY_MINORITY
    TURNPOLICY_RIGHT
    TURNPOLICY_WHITE
}

enum RemoteFileCropFocus {
    BOTTOM
    CENTER
    EDGES
    ENTROPY
    FACES
    LEFT
    RIGHT
    TOP
}

enum RemoteFileFit {
    CONTAIN
    COVER
    FILL
    OUTSIDE
}

enum RemoteFileFormat {
    AUTO
    AVIF
    JPG
    PNG
    WEBP
}

enum RemoteFileLayout {
    CONSTRAINED
    FIXED
    FULL_WIDTH
}

enum RemoteFilePlaceholder {
    BLURRED
    DOMINANT_COLOR
    NONE
    TRACED_SVG
}

enum SiteBuildMetadataFieldsEnum {
    buildTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
}

enum SiteFieldsEnum {
    buildTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    host
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    jsxRuntime
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    pathPrefix
    polyfill
    port
    siteMetadata___author
    siteMetadata___backgroundColor
    siteMetadata___banner
    siteMetadata___description
    siteMetadata___favicon
    siteMetadata___logo
    siteMetadata___pathPrefix
    siteMetadata___shortName
    siteMetadata___siteLanguage
    siteMetadata___siteUrl
    siteMetadata___themeColor
    siteMetadata___title
    siteMetadata___titleAlt
    siteMetadata___twitter
    siteMetadata___url
    trailingSlash
}

enum SiteFunctionFieldsEnum {
    absoluteCompiledFilePath
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    functionRoute
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    matchPath
    originalAbsoluteFilePath
    originalRelativeFilePath
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    pluginName
    relativeCompiledFilePath
}

enum SitePageFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    component
    componentChunkName
    id
    internalComponentName
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    matchPath
    pageContext
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    path
    pluginCreator___browserAPIs
    pluginCreator___children
    pluginCreator___children___children
    pluginCreator___children___children___children
    pluginCreator___children___children___id
    pluginCreator___children___id
    pluginCreator___children___internal___content
    pluginCreator___children___internal___contentDigest
    pluginCreator___children___internal___description
    pluginCreator___children___internal___fieldOwners
    pluginCreator___children___internal___ignoreType
    pluginCreator___children___internal___mediaType
    pluginCreator___children___internal___owner
    pluginCreator___children___internal___type
    pluginCreator___children___parent___children
    pluginCreator___children___parent___id
    pluginCreator___id
    pluginCreator___internal___content
    pluginCreator___internal___contentDigest
    pluginCreator___internal___description
    pluginCreator___internal___fieldOwners
    pluginCreator___internal___ignoreType
    pluginCreator___internal___mediaType
    pluginCreator___internal___owner
    pluginCreator___internal___type
    pluginCreator___name
    pluginCreator___nodeAPIs
    pluginCreator___packageJson
    pluginCreator___parent___children
    pluginCreator___parent___children___children
    pluginCreator___parent___children___id
    pluginCreator___parent___id
    pluginCreator___parent___internal___content
    pluginCreator___parent___internal___contentDigest
    pluginCreator___parent___internal___description
    pluginCreator___parent___internal___fieldOwners
    pluginCreator___parent___internal___ignoreType
    pluginCreator___parent___internal___mediaType
    pluginCreator___parent___internal___owner
    pluginCreator___parent___internal___type
    pluginCreator___parent___parent___children
    pluginCreator___parent___parent___id
    pluginCreator___pluginFilepath
    pluginCreator___pluginOptions
    pluginCreator___resolve
    pluginCreator___ssrAPIs
    pluginCreator___version
}

enum SitePluginFieldsEnum {
    browserAPIs
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    name
    nodeAPIs
    packageJson
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    pluginFilepath
    pluginOptions
    resolve
    ssrAPIs
    version
}

enum SortOrderEnum {
    ASC
    DESC
}

enum contentfulBlogPostContentsTextNodeFieldsEnum {
    childMarkdownRemark___children
    childMarkdownRemark___children___children
    childMarkdownRemark___children___children___children
    childMarkdownRemark___children___children___id
    childMarkdownRemark___children___id
    childMarkdownRemark___children___internal___content
    childMarkdownRemark___children___internal___contentDigest
    childMarkdownRemark___children___internal___description
    childMarkdownRemark___children___internal___fieldOwners
    childMarkdownRemark___children___internal___ignoreType
    childMarkdownRemark___children___internal___mediaType
    childMarkdownRemark___children___internal___owner
    childMarkdownRemark___children___internal___type
    childMarkdownRemark___children___parent___children
    childMarkdownRemark___children___parent___id
    childMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___fileAbsolutePath
    childMarkdownRemark___frontmatter___cover___absolutePath
    childMarkdownRemark___frontmatter___cover___accessTime
    childMarkdownRemark___frontmatter___cover___atime
    childMarkdownRemark___frontmatter___cover___atimeMs
    childMarkdownRemark___frontmatter___cover___base
    childMarkdownRemark___frontmatter___cover___birthTime
    childMarkdownRemark___frontmatter___cover___birthtime
    childMarkdownRemark___frontmatter___cover___birthtimeMs
    childMarkdownRemark___frontmatter___cover___blksize
    childMarkdownRemark___frontmatter___cover___blocks
    childMarkdownRemark___frontmatter___cover___changeTime
    childMarkdownRemark___frontmatter___cover___children
    childMarkdownRemark___frontmatter___cover___childrenImageSharp
    childMarkdownRemark___frontmatter___cover___childrenMarkdownRemark
    childMarkdownRemark___frontmatter___cover___ctime
    childMarkdownRemark___frontmatter___cover___ctimeMs
    childMarkdownRemark___frontmatter___cover___dev
    childMarkdownRemark___frontmatter___cover___dir
    childMarkdownRemark___frontmatter___cover___ext
    childMarkdownRemark___frontmatter___cover___extension
    childMarkdownRemark___frontmatter___cover___gid
    childMarkdownRemark___frontmatter___cover___id
    childMarkdownRemark___frontmatter___cover___ino
    childMarkdownRemark___frontmatter___cover___mode
    childMarkdownRemark___frontmatter___cover___modifiedTime
    childMarkdownRemark___frontmatter___cover___mtime
    childMarkdownRemark___frontmatter___cover___mtimeMs
    childMarkdownRemark___frontmatter___cover___name
    childMarkdownRemark___frontmatter___cover___nlink
    childMarkdownRemark___frontmatter___cover___prettySize
    childMarkdownRemark___frontmatter___cover___publicURL
    childMarkdownRemark___frontmatter___cover___rdev
    childMarkdownRemark___frontmatter___cover___relativeDirectory
    childMarkdownRemark___frontmatter___cover___relativePath
    childMarkdownRemark___frontmatter___cover___root
    childMarkdownRemark___frontmatter___cover___size
    childMarkdownRemark___frontmatter___cover___sourceInstanceName
    childMarkdownRemark___frontmatter___cover___uid
    childMarkdownRemark___frontmatter___date
    childMarkdownRemark___frontmatter___path
    childMarkdownRemark___frontmatter___published
    childMarkdownRemark___frontmatter___tags
    childMarkdownRemark___frontmatter___title
    childMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___headings___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___html
    childMarkdownRemark___htmlAst
    childMarkdownRemark___id
    childMarkdownRemark___internal___content
    childMarkdownRemark___internal___contentDigest
    childMarkdownRemark___internal___description
    childMarkdownRemark___internal___fieldOwners
    childMarkdownRemark___internal___ignoreType
    childMarkdownRemark___internal___mediaType
    childMarkdownRemark___internal___owner
    childMarkdownRemark___internal___type
    childMarkdownRemark___parent___children
    childMarkdownRemark___parent___children___children
    childMarkdownRemark___parent___children___id
    childMarkdownRemark___parent___id
    childMarkdownRemark___parent___internal___content
    childMarkdownRemark___parent___internal___contentDigest
    childMarkdownRemark___parent___internal___description
    childMarkdownRemark___parent___internal___fieldOwners
    childMarkdownRemark___parent___internal___ignoreType
    childMarkdownRemark___parent___internal___mediaType
    childMarkdownRemark___parent___internal___owner
    childMarkdownRemark___parent___internal___type
    childMarkdownRemark___parent___parent___children
    childMarkdownRemark___parent___parent___id
    childMarkdownRemark___rawMarkdownBody
    childMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___timeToRead
    childMarkdownRemark___wordCount___paragraphs
    childMarkdownRemark___wordCount___sentences
    childMarkdownRemark___wordCount___words
    children
    childrenMarkdownRemark
    childrenMarkdownRemark___children
    childrenMarkdownRemark___children___children
    childrenMarkdownRemark___children___children___children
    childrenMarkdownRemark___children___children___id
    childrenMarkdownRemark___children___id
    childrenMarkdownRemark___children___internal___content
    childrenMarkdownRemark___children___internal___contentDigest
    childrenMarkdownRemark___children___internal___description
    childrenMarkdownRemark___children___internal___fieldOwners
    childrenMarkdownRemark___children___internal___ignoreType
    childrenMarkdownRemark___children___internal___mediaType
    childrenMarkdownRemark___children___internal___owner
    childrenMarkdownRemark___children___internal___type
    childrenMarkdownRemark___children___parent___children
    childrenMarkdownRemark___children___parent___id
    childrenMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___fileAbsolutePath
    childrenMarkdownRemark___frontmatter___cover___absolutePath
    childrenMarkdownRemark___frontmatter___cover___accessTime
    childrenMarkdownRemark___frontmatter___cover___atime
    childrenMarkdownRemark___frontmatter___cover___atimeMs
    childrenMarkdownRemark___frontmatter___cover___base
    childrenMarkdownRemark___frontmatter___cover___birthTime
    childrenMarkdownRemark___frontmatter___cover___birthtime
    childrenMarkdownRemark___frontmatter___cover___birthtimeMs
    childrenMarkdownRemark___frontmatter___cover___blksize
    childrenMarkdownRemark___frontmatter___cover___blocks
    childrenMarkdownRemark___frontmatter___cover___changeTime
    childrenMarkdownRemark___frontmatter___cover___children
    childrenMarkdownRemark___frontmatter___cover___childrenImageSharp
    childrenMarkdownRemark___frontmatter___cover___childrenMarkdownRemark
    childrenMarkdownRemark___frontmatter___cover___ctime
    childrenMarkdownRemark___frontmatter___cover___ctimeMs
    childrenMarkdownRemark___frontmatter___cover___dev
    childrenMarkdownRemark___frontmatter___cover___dir
    childrenMarkdownRemark___frontmatter___cover___ext
    childrenMarkdownRemark___frontmatter___cover___extension
    childrenMarkdownRemark___frontmatter___cover___gid
    childrenMarkdownRemark___frontmatter___cover___id
    childrenMarkdownRemark___frontmatter___cover___ino
    childrenMarkdownRemark___frontmatter___cover___mode
    childrenMarkdownRemark___frontmatter___cover___modifiedTime
    childrenMarkdownRemark___frontmatter___cover___mtime
    childrenMarkdownRemark___frontmatter___cover___mtimeMs
    childrenMarkdownRemark___frontmatter___cover___name
    childrenMarkdownRemark___frontmatter___cover___nlink
    childrenMarkdownRemark___frontmatter___cover___prettySize
    childrenMarkdownRemark___frontmatter___cover___publicURL
    childrenMarkdownRemark___frontmatter___cover___rdev
    childrenMarkdownRemark___frontmatter___cover___relativeDirectory
    childrenMarkdownRemark___frontmatter___cover___relativePath
    childrenMarkdownRemark___frontmatter___cover___root
    childrenMarkdownRemark___frontmatter___cover___size
    childrenMarkdownRemark___frontmatter___cover___sourceInstanceName
    childrenMarkdownRemark___frontmatter___cover___uid
    childrenMarkdownRemark___frontmatter___date
    childrenMarkdownRemark___frontmatter___path
    childrenMarkdownRemark___frontmatter___published
    childrenMarkdownRemark___frontmatter___tags
    childrenMarkdownRemark___frontmatter___title
    childrenMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___headings___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___html
    childrenMarkdownRemark___htmlAst
    childrenMarkdownRemark___id
    childrenMarkdownRemark___internal___content
    childrenMarkdownRemark___internal___contentDigest
    childrenMarkdownRemark___internal___description
    childrenMarkdownRemark___internal___fieldOwners
    childrenMarkdownRemark___internal___ignoreType
    childrenMarkdownRemark___internal___mediaType
    childrenMarkdownRemark___internal___owner
    childrenMarkdownRemark___internal___type
    childrenMarkdownRemark___parent___children
    childrenMarkdownRemark___parent___children___children
    childrenMarkdownRemark___parent___children___id
    childrenMarkdownRemark___parent___id
    childrenMarkdownRemark___parent___internal___content
    childrenMarkdownRemark___parent___internal___contentDigest
    childrenMarkdownRemark___parent___internal___description
    childrenMarkdownRemark___parent___internal___fieldOwners
    childrenMarkdownRemark___parent___internal___ignoreType
    childrenMarkdownRemark___parent___internal___mediaType
    childrenMarkdownRemark___parent___internal___owner
    childrenMarkdownRemark___parent___internal___type
    childrenMarkdownRemark___parent___parent___children
    childrenMarkdownRemark___parent___parent___id
    childrenMarkdownRemark___rawMarkdownBody
    childrenMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___timeToRead
    childrenMarkdownRemark___wordCount___paragraphs
    childrenMarkdownRemark___wordCount___sentences
    childrenMarkdownRemark___wordCount___words
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    contents
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    sys___type
}

"A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar."
scalar Date

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON

input AVIFOptions {
    lossless: Boolean
    quality: Int
    speed: Int
}

input BlurredOptions {
    "Force the output format for the low-res preview. Default is to use the same format as the input. You should rarely need to change this"
    toFormat: ImageFormat
    "Width of the generated low-res preview. Default is 20px"
    width: Int
}

input BooleanQueryOperatorInput {
    eq: Boolean
    in: [Boolean]
    ne: Boolean
    nin: [Boolean]
}

input ContentfulAssetFilterInput {
    children: NodeFilterListInput
    contentful_id: StringQueryOperatorInput
    filename: StringQueryOperatorInput
    filesize: IntQueryOperatorInput
    gatsbyImage: JSONQueryOperatorInput
    gatsbyImageData: JSONQueryOperatorInput
    height: IntQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    mimeType: StringQueryOperatorInput
    parent: NodeFilterInput
    publicUrl: StringQueryOperatorInput
    resize: RemoteFileResizeFilterInput
    width: IntQueryOperatorInput
}

input ContentfulAssetSortInput {
    fields: [ContentfulAssetFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input ContentfulBlogPostFilterInput {
    childContentfulBlogPostContentsTextNode: contentfulBlogPostContentsTextNodeFilterInput
    children: NodeFilterListInput
    childrenContentfulBlogPostContentsTextNode: contentfulBlogPostContentsTextNodeFilterListInput
    contentful_id: StringQueryOperatorInput
    contents: contentfulBlogPostContentsTextNodeFilterInput
    createdAt: DateQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    node_locale: StringQueryOperatorInput
    parent: NodeFilterInput
    publishDate: DateQueryOperatorInput
    slug: StringQueryOperatorInput
    spaceId: StringQueryOperatorInput
    sys: ContentfulBlogPostSysFilterInput
    tags: ContentfulTagsFilterListInput
    title: StringQueryOperatorInput
    updatedAt: DateQueryOperatorInput
}

input ContentfulBlogPostFilterListInput {
    elemMatch: ContentfulBlogPostFilterInput
}

input ContentfulBlogPostSortInput {
    fields: [ContentfulBlogPostFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input ContentfulBlogPostSysContentTypeFilterInput {
    sys: ContentfulBlogPostSysContentTypeSysFilterInput
}

input ContentfulBlogPostSysContentTypeSysFilterInput {
    id: StringQueryOperatorInput
    linkType: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input ContentfulBlogPostSysFilterInput {
    contentType: ContentfulBlogPostSysContentTypeFilterInput
    revision: IntQueryOperatorInput
    type: StringQueryOperatorInput
}

input ContentfulContentTypeFilterInput {
    children: NodeFilterListInput
    description: StringQueryOperatorInput
    displayField: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    parent: NodeFilterInput
    sys: ContentfulContentTypeSysFilterInput
}

input ContentfulContentTypeSortInput {
    fields: [ContentfulContentTypeFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input ContentfulContentTypeSysFilterInput {
    type: StringQueryOperatorInput
}

input ContentfulEntryFilterInput {
    children: NodeFilterListInput
    contentful_id: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    node_locale: StringQueryOperatorInput
    parent: NodeFilterInput
}

input ContentfulEntrySortInput {
    fields: [ContentfulEntryFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input ContentfulTagsFilterInput {
    blogpost: ContentfulBlogPostFilterListInput
    children: NodeFilterListInput
    contentful_id: StringQueryOperatorInput
    createdAt: DateQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    node_locale: StringQueryOperatorInput
    parent: NodeFilterInput
    slug: StringQueryOperatorInput
    spaceId: StringQueryOperatorInput
    sys: ContentfulTagsSysFilterInput
    title: StringQueryOperatorInput
    updatedAt: DateQueryOperatorInput
}

input ContentfulTagsFilterListInput {
    elemMatch: ContentfulTagsFilterInput
}

input ContentfulTagsSortInput {
    fields: [ContentfulTagsFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input ContentfulTagsSysContentTypeFilterInput {
    sys: ContentfulTagsSysContentTypeSysFilterInput
}

input ContentfulTagsSysContentTypeSysFilterInput {
    id: StringQueryOperatorInput
    linkType: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input ContentfulTagsSysFilterInput {
    contentType: ContentfulTagsSysContentTypeFilterInput
    revision: IntQueryOperatorInput
    type: StringQueryOperatorInput
}

input DateQueryOperatorInput {
    eq: Date
    gt: Date
    gte: Date
    in: [Date]
    lt: Date
    lte: Date
    ne: Date
    nin: [Date]
}

input DirectoryFilterInput {
    absolutePath: StringQueryOperatorInput
    accessTime: DateQueryOperatorInput
    atime: DateQueryOperatorInput
    atimeMs: FloatQueryOperatorInput
    base: StringQueryOperatorInput
    birthTime: DateQueryOperatorInput
    birthtime: DateQueryOperatorInput
    birthtimeMs: FloatQueryOperatorInput
    changeTime: DateQueryOperatorInput
    children: NodeFilterListInput
    ctime: DateQueryOperatorInput
    ctimeMs: FloatQueryOperatorInput
    dev: IntQueryOperatorInput
    dir: StringQueryOperatorInput
    ext: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    gid: IntQueryOperatorInput
    id: StringQueryOperatorInput
    ino: FloatQueryOperatorInput
    internal: InternalFilterInput
    mode: IntQueryOperatorInput
    modifiedTime: DateQueryOperatorInput
    mtime: DateQueryOperatorInput
    mtimeMs: FloatQueryOperatorInput
    name: StringQueryOperatorInput
    nlink: IntQueryOperatorInput
    parent: NodeFilterInput
    prettySize: StringQueryOperatorInput
    rdev: IntQueryOperatorInput
    relativeDirectory: StringQueryOperatorInput
    relativePath: StringQueryOperatorInput
    root: StringQueryOperatorInput
    size: IntQueryOperatorInput
    sourceInstanceName: StringQueryOperatorInput
    uid: IntQueryOperatorInput
}

input DirectorySortInput {
    fields: [DirectoryFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input DuotoneGradient {
    highlight: String!
    opacity: Int
    shadow: String!
}

input FileFilterInput {
    absolutePath: StringQueryOperatorInput
    accessTime: DateQueryOperatorInput
    atime: DateQueryOperatorInput
    atimeMs: FloatQueryOperatorInput
    base: StringQueryOperatorInput
    birthTime: DateQueryOperatorInput
    birthtime: DateQueryOperatorInput
    birthtimeMs: FloatQueryOperatorInput
    blksize: IntQueryOperatorInput
    blocks: IntQueryOperatorInput
    changeTime: DateQueryOperatorInput
    childImageSharp: ImageSharpFilterInput
    childMarkdownRemark: MarkdownRemarkFilterInput
    children: NodeFilterListInput
    childrenImageSharp: ImageSharpFilterListInput
    childrenMarkdownRemark: MarkdownRemarkFilterListInput
    ctime: DateQueryOperatorInput
    ctimeMs: FloatQueryOperatorInput
    dev: IntQueryOperatorInput
    dir: StringQueryOperatorInput
    ext: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    gid: IntQueryOperatorInput
    id: StringQueryOperatorInput
    ino: FloatQueryOperatorInput
    internal: InternalFilterInput
    mode: IntQueryOperatorInput
    modifiedTime: DateQueryOperatorInput
    mtime: DateQueryOperatorInput
    mtimeMs: FloatQueryOperatorInput
    name: StringQueryOperatorInput
    nlink: IntQueryOperatorInput
    parent: NodeFilterInput
    prettySize: StringQueryOperatorInput
    publicURL: StringQueryOperatorInput
    rdev: IntQueryOperatorInput
    relativeDirectory: StringQueryOperatorInput
    relativePath: StringQueryOperatorInput
    root: StringQueryOperatorInput
    size: IntQueryOperatorInput
    sourceInstanceName: StringQueryOperatorInput
    uid: IntQueryOperatorInput
}

input FileSortInput {
    fields: [FileFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input FloatQueryOperatorInput {
    eq: Float
    gt: Float
    gte: Float
    in: [Float]
    lt: Float
    lte: Float
    ne: Float
    nin: [Float]
}

input ImageSharpFilterInput {
    children: NodeFilterListInput
    fixed: ImageSharpFixedFilterInput
    fluid: ImageSharpFluidFilterInput
    gatsbyImageData: JSONQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    original: ImageSharpOriginalFilterInput
    parent: NodeFilterInput
    resize: ImageSharpResizeFilterInput
}

input ImageSharpFilterListInput {
    elemMatch: ImageSharpFilterInput
}

input ImageSharpFixedFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    height: FloatQueryOperatorInput
    originalName: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
    width: FloatQueryOperatorInput
}

input ImageSharpFluidFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    originalImg: StringQueryOperatorInput
    originalName: StringQueryOperatorInput
    presentationHeight: IntQueryOperatorInput
    presentationWidth: IntQueryOperatorInput
    sizes: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
}

input ImageSharpOriginalFilterInput {
    height: FloatQueryOperatorInput
    src: StringQueryOperatorInput
    width: FloatQueryOperatorInput
}

input ImageSharpResizeFilterInput {
    aspectRatio: FloatQueryOperatorInput
    height: IntQueryOperatorInput
    originalName: StringQueryOperatorInput
    src: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImageSharpSortInput {
    fields: [ImageSharpFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input IntQueryOperatorInput {
    eq: Int
    gt: Int
    gte: Int
    in: [Int]
    lt: Int
    lte: Int
    ne: Int
    nin: [Int]
}

input InternalFilterInput {
    content: StringQueryOperatorInput
    contentDigest: StringQueryOperatorInput
    description: StringQueryOperatorInput
    fieldOwners: StringQueryOperatorInput
    ignoreType: BooleanQueryOperatorInput
    mediaType: StringQueryOperatorInput
    owner: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input JPGOptions {
    progressive: Boolean = true
    quality: Int
}

input JSONQueryOperatorInput {
    eq: JSON
    glob: JSON
    in: [JSON]
    ne: JSON
    nin: [JSON]
    regex: JSON
}

input MarkdownHeadingFilterInput {
    depth: IntQueryOperatorInput
    id: StringQueryOperatorInput
    value: StringQueryOperatorInput
}

input MarkdownHeadingFilterListInput {
    elemMatch: MarkdownHeadingFilterInput
}

input MarkdownRemarkFilterInput {
    children: NodeFilterListInput
    excerpt: StringQueryOperatorInput
    excerptAst: JSONQueryOperatorInput
    fileAbsolutePath: StringQueryOperatorInput
    frontmatter: MarkdownRemarkFrontmatterFilterInput
    headings: MarkdownHeadingFilterListInput
    html: StringQueryOperatorInput
    htmlAst: JSONQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
    rawMarkdownBody: StringQueryOperatorInput
    tableOfContents: StringQueryOperatorInput
    timeToRead: IntQueryOperatorInput
    wordCount: MarkdownWordCountFilterInput
}

input MarkdownRemarkFilterListInput {
    elemMatch: MarkdownRemarkFilterInput
}

input MarkdownRemarkFrontmatterFilterInput {
    cover: FileFilterInput
    date: DateQueryOperatorInput
    path: StringQueryOperatorInput
    published: BooleanQueryOperatorInput
    tags: StringQueryOperatorInput
    title: StringQueryOperatorInput
}

input MarkdownRemarkSortInput {
    fields: [MarkdownRemarkFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input MarkdownWordCountFilterInput {
    paragraphs: IntQueryOperatorInput
    sentences: IntQueryOperatorInput
    words: IntQueryOperatorInput
}

input NodeFilterInput {
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
}

input NodeFilterListInput {
    elemMatch: NodeFilterInput
}

input PNGOptions {
    compressionSpeed: Int = 4
    quality: Int
}

input Potrace {
    alphaMax: Float
    background: String
    blackOnWhite: Boolean
    color: String
    optCurve: Boolean
    optTolerance: Float
    threshold: Int
    turdSize: Float
    turnPolicy: PotraceTurnPolicy
}

input RemoteFileResizeFilterInput {
    height: IntQueryOperatorInput
    src: StringQueryOperatorInput
    width: IntQueryOperatorInput
}

input SiteBuildMetadataFilterInput {
    buildTime: DateQueryOperatorInput
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
}

input SiteBuildMetadataSortInput {
    fields: [SiteBuildMetadataFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SiteFilterInput {
    buildTime: DateQueryOperatorInput
    children: NodeFilterListInput
    host: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    jsxRuntime: StringQueryOperatorInput
    parent: NodeFilterInput
    pathPrefix: StringQueryOperatorInput
    polyfill: BooleanQueryOperatorInput
    port: IntQueryOperatorInput
    siteMetadata: SiteSiteMetadataFilterInput
    trailingSlash: StringQueryOperatorInput
}

input SiteFunctionFilterInput {
    absoluteCompiledFilePath: StringQueryOperatorInput
    children: NodeFilterListInput
    functionRoute: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    matchPath: StringQueryOperatorInput
    originalAbsoluteFilePath: StringQueryOperatorInput
    originalRelativeFilePath: StringQueryOperatorInput
    parent: NodeFilterInput
    pluginName: StringQueryOperatorInput
    relativeCompiledFilePath: StringQueryOperatorInput
}

input SiteFunctionSortInput {
    fields: [SiteFunctionFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SitePageFilterInput {
    children: NodeFilterListInput
    component: StringQueryOperatorInput
    componentChunkName: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    internalComponentName: StringQueryOperatorInput
    matchPath: StringQueryOperatorInput
    pageContext: JSONQueryOperatorInput
    parent: NodeFilterInput
    path: StringQueryOperatorInput
    pluginCreator: SitePluginFilterInput
}

input SitePageSortInput {
    fields: [SitePageFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SitePluginFilterInput {
    browserAPIs: StringQueryOperatorInput
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    nodeAPIs: StringQueryOperatorInput
    packageJson: JSONQueryOperatorInput
    parent: NodeFilterInput
    pluginFilepath: StringQueryOperatorInput
    pluginOptions: JSONQueryOperatorInput
    resolve: StringQueryOperatorInput
    ssrAPIs: StringQueryOperatorInput
    version: StringQueryOperatorInput
}

input SitePluginSortInput {
    fields: [SitePluginFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SiteSiteMetadataFilterInput {
    author: StringQueryOperatorInput
    backgroundColor: StringQueryOperatorInput
    banner: StringQueryOperatorInput
    description: StringQueryOperatorInput
    favicon: StringQueryOperatorInput
    logo: StringQueryOperatorInput
    pathPrefix: StringQueryOperatorInput
    shortName: StringQueryOperatorInput
    siteLanguage: StringQueryOperatorInput
    siteUrl: StringQueryOperatorInput
    themeColor: StringQueryOperatorInput
    title: StringQueryOperatorInput
    titleAlt: StringQueryOperatorInput
    twitter: StringQueryOperatorInput
    url: StringQueryOperatorInput
}

input SiteSortInput {
    fields: [SiteFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input StringQueryOperatorInput {
    eq: String
    glob: String
    in: [String]
    ne: String
    nin: [String]
    regex: String
}

input TransformOptions {
    cropFocus: ImageCropFocus = ATTENTION
    duotone: DuotoneGradient
    fit: ImageFit = COVER
    grayscale: Boolean = false
    rotate: Int = 0
    trim: Float = 0.0
}

input WebPOptions {
    quality: Int
}

input contentfulBlogPostContentsTextNodeFilterInput {
    childMarkdownRemark: MarkdownRemarkFilterInput
    children: NodeFilterListInput
    childrenMarkdownRemark: MarkdownRemarkFilterListInput
    contents: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
    sys: contentfulBlogPostContentsTextNodeSysFilterInput
}

input contentfulBlogPostContentsTextNodeFilterListInput {
    elemMatch: contentfulBlogPostContentsTextNodeFilterInput
}

input contentfulBlogPostContentsTextNodeSortInput {
    fields: [contentfulBlogPostContentsTextNodeFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input contentfulBlogPostContentsTextNodeSysFilterInput {
    type: StringQueryOperatorInput
}
